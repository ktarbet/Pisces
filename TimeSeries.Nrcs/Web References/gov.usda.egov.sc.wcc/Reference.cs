//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Usda.gov.usda.egov.sc.wcc {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AwdbWebServiceSoapBinding", Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class AwdbWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getElementOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForecastEquationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForecastsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHourlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReservoirMetadataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForecastPointOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCentralTendencyPeakDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForecastPeriodCentralTendencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForecastValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUnitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCentralTendencySWETimingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCentralTendencyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStationMetadataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPeakDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback runDiagnosticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForecastConfigurationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForecastPeriodAveragesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStationElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataInsertedOrUpdatedSinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAveragesDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForecastPeriodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHeightDepthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback areYouThereOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReservoirMetadataMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInstantaneousDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForecastOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForecastsByPubDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUnitNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllForecastsForStationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForecastEquationsMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAveragesPeakOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInstantaneousDataInsertedOrUpdatedSinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStationDataAssuredFlagsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForecastPointsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStationMetadataMultipleOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AwdbWebService() {
            this.Url = global::Usda.Properties.Settings.Default.Usda_Nrcs_Web_gov_usda_egov_sc_wcc_AwdbWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getElementsCompletedEventHandler getElementsCompleted;
        
        /// <remarks/>
        public event getElementCompletedEventHandler getElementCompleted;
        
        /// <remarks/>
        public event getForecastEquationsCompletedEventHandler getForecastEquationsCompleted;
        
        /// <remarks/>
        public event getForecastsCompletedEventHandler getForecastsCompleted;
        
        /// <remarks/>
        public event getHourlyDataCompletedEventHandler getHourlyDataCompleted;
        
        /// <remarks/>
        public event getReservoirMetadataCompletedEventHandler getReservoirMetadataCompleted;
        
        /// <remarks/>
        public event getForecastPointCompletedEventHandler getForecastPointCompleted;
        
        /// <remarks/>
        public event getCentralTendencyPeakDataCompletedEventHandler getCentralTendencyPeakDataCompleted;
        
        /// <remarks/>
        public event getForecastPeriodCentralTendencyCompletedEventHandler getForecastPeriodCentralTendencyCompleted;
        
        /// <remarks/>
        public event getForecastValueCompletedEventHandler getForecastValueCompleted;
        
        /// <remarks/>
        public event getUnitsCompletedEventHandler getUnitsCompleted;
        
        /// <remarks/>
        public event getCentralTendencySWETimingCompletedEventHandler getCentralTendencySWETimingCompleted;
        
        /// <remarks/>
        public event getCentralTendencyDataCompletedEventHandler getCentralTendencyDataCompleted;
        
        /// <remarks/>
        public event getStationMetadataCompletedEventHandler getStationMetadataCompleted;
        
        /// <remarks/>
        public event getPeakDataCompletedEventHandler getPeakDataCompleted;
        
        /// <remarks/>
        public event runDiagnosticsCompletedEventHandler runDiagnosticsCompleted;
        
        /// <remarks/>
        public event getForecastConfigurationsCompletedEventHandler getForecastConfigurationsCompleted;
        
        /// <remarks/>
        public event getForecastPeriodAveragesCompletedEventHandler getForecastPeriodAveragesCompleted;
        
        /// <remarks/>
        public event getStationElementsCompletedEventHandler getStationElementsCompleted;
        
        /// <remarks/>
        public event getDataInsertedOrUpdatedSinceCompletedEventHandler getDataInsertedOrUpdatedSinceCompleted;
        
        /// <remarks/>
        public event getAveragesDataCompletedEventHandler getAveragesDataCompleted;
        
        /// <remarks/>
        public event getForecastPeriodsCompletedEventHandler getForecastPeriodsCompleted;
        
        /// <remarks/>
        public event getHeightDepthsCompletedEventHandler getHeightDepthsCompleted;
        
        /// <remarks/>
        public event areYouThereCompletedEventHandler areYouThereCompleted;
        
        /// <remarks/>
        public event getReservoirMetadataMultipleCompletedEventHandler getReservoirMetadataMultipleCompleted;
        
        /// <remarks/>
        public event getInstantaneousDataCompletedEventHandler getInstantaneousDataCompleted;
        
        /// <remarks/>
        public event getDataCompletedEventHandler getDataCompleted;
        
        /// <remarks/>
        public event getForecastCompletedEventHandler getForecastCompleted;
        
        /// <remarks/>
        public event getStationsCompletedEventHandler getStationsCompleted;
        
        /// <remarks/>
        public event getForecastsByPubDateCompletedEventHandler getForecastsByPubDateCompleted;
        
        /// <remarks/>
        public event getUnitNameCompletedEventHandler getUnitNameCompleted;
        
        /// <remarks/>
        public event getAllForecastsForStationCompletedEventHandler getAllForecastsForStationCompleted;
        
        /// <remarks/>
        public event getForecastEquationsMultipleCompletedEventHandler getForecastEquationsMultipleCompleted;
        
        /// <remarks/>
        public event getAveragesPeakCompletedEventHandler getAveragesPeakCompleted;
        
        /// <remarks/>
        public event getInstantaneousDataInsertedOrUpdatedSinceCompletedEventHandler getInstantaneousDataInsertedOrUpdatedSinceCompleted;
        
        /// <remarks/>
        public event getStationDataAssuredFlagsCompletedEventHandler getStationDataAssuredFlagsCompleted;
        
        /// <remarks/>
        public event getForecastPointsCompletedEventHandler getForecastPointsCompleted;
        
        /// <remarks/>
        public event getStationMetadataMultipleCompletedEventHandler getStationMetadataMultipleCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public element[] getElements() {
            object[] results = this.Invoke("getElements", new object[0]);
            return ((element[])(results[0]));
        }
        
        /// <remarks/>
        public void getElementsAsync() {
            this.getElementsAsync(null);
        }
        
        /// <remarks/>
        public void getElementsAsync(object userState) {
            if ((this.getElementsOperationCompleted == null)) {
                this.getElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetElementsOperationCompleted);
            }
            this.InvokeAsync("getElements", new object[0], this.getElementsOperationCompleted, userState);
        }
        
        private void OngetElementsOperationCompleted(object arg) {
            if ((this.getElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getElementsCompleted(this, new getElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public element getElement([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd) {
            object[] results = this.Invoke("getElement", new object[] {
                        elementCd});
            return ((element)(results[0]));
        }
        
        /// <remarks/>
        public void getElementAsync(string elementCd) {
            this.getElementAsync(elementCd, null);
        }
        
        /// <remarks/>
        public void getElementAsync(string elementCd, object userState) {
            if ((this.getElementOperationCompleted == null)) {
                this.getElementOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetElementOperationCompleted);
            }
            this.InvokeAsync("getElement", new object[] {
                        elementCd}, this.getElementOperationCompleted, userState);
        }
        
        private void OngetElementOperationCompleted(object arg) {
            if ((this.getElementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getElementCompleted(this, new getElementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastEquation[] getForecastEquations([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet) {
            object[] results = this.Invoke("getForecastEquations", new object[] {
                        stationTriplet});
            return ((forecastEquation[])(results[0]));
        }
        
        /// <remarks/>
        public void getForecastEquationsAsync(string stationTriplet) {
            this.getForecastEquationsAsync(stationTriplet, null);
        }
        
        /// <remarks/>
        public void getForecastEquationsAsync(string stationTriplet, object userState) {
            if ((this.getForecastEquationsOperationCompleted == null)) {
                this.getForecastEquationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastEquationsOperationCompleted);
            }
            this.InvokeAsync("getForecastEquations", new object[] {
                        stationTriplet}, this.getForecastEquationsOperationCompleted, userState);
        }
        
        private void OngetForecastEquationsOperationCompleted(object arg) {
            if ((this.getForecastEquationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastEquationsCompleted(this, new getForecastEquationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecast[] getForecasts([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string forecastPeriod) {
            object[] results = this.Invoke("getForecasts", new object[] {
                        stationTriplet,
                        elementCd,
                        forecastPeriod});
            return ((forecast[])(results[0]));
        }
        
        /// <remarks/>
        public void getForecastsAsync(string stationTriplet, string elementCd, string forecastPeriod) {
            this.getForecastsAsync(stationTriplet, elementCd, forecastPeriod, null);
        }
        
        /// <remarks/>
        public void getForecastsAsync(string stationTriplet, string elementCd, string forecastPeriod, object userState) {
            if ((this.getForecastsOperationCompleted == null)) {
                this.getForecastsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastsOperationCompleted);
            }
            this.InvokeAsync("getForecasts", new object[] {
                        stationTriplet,
                        elementCd,
                        forecastPeriod}, this.getForecastsOperationCompleted, userState);
        }
        
        private void OngetForecastsOperationCompleted(object arg) {
            if ((this.getForecastsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastsCompleted(this, new getForecastsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hourlyData[] getHourlyData([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int ordinal, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string beginDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string endDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int beginHour, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool beginHourSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endHour, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool endHourSpecified) {
            object[] results = this.Invoke("getHourlyData", new object[] {
                        stationTriplets,
                        elementCd,
                        ordinal,
                        heightDepth,
                        beginDate,
                        endDate,
                        beginHour,
                        beginHourSpecified,
                        endHour,
                        endHourSpecified});
            return ((hourlyData[])(results[0]));
        }
        
        /// <remarks/>
        public void getHourlyDataAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, string beginDate, string endDate, int beginHour, bool beginHourSpecified, int endHour, bool endHourSpecified) {
            this.getHourlyDataAsync(stationTriplets, elementCd, ordinal, heightDepth, beginDate, endDate, beginHour, beginHourSpecified, endHour, endHourSpecified, null);
        }
        
        /// <remarks/>
        public void getHourlyDataAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, string beginDate, string endDate, int beginHour, bool beginHourSpecified, int endHour, bool endHourSpecified, object userState) {
            if ((this.getHourlyDataOperationCompleted == null)) {
                this.getHourlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHourlyDataOperationCompleted);
            }
            this.InvokeAsync("getHourlyData", new object[] {
                        stationTriplets,
                        elementCd,
                        ordinal,
                        heightDepth,
                        beginDate,
                        endDate,
                        beginHour,
                        beginHourSpecified,
                        endHour,
                        endHourSpecified}, this.getHourlyDataOperationCompleted, userState);
        }
        
        private void OngetHourlyDataOperationCompleted(object arg) {
            if ((this.getHourlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHourlyDataCompleted(this, new getHourlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public reservoirMetadata getReservoirMetadata([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet) {
            object[] results = this.Invoke("getReservoirMetadata", new object[] {
                        stationTriplet});
            return ((reservoirMetadata)(results[0]));
        }
        
        /// <remarks/>
        public void getReservoirMetadataAsync(string stationTriplet) {
            this.getReservoirMetadataAsync(stationTriplet, null);
        }
        
        /// <remarks/>
        public void getReservoirMetadataAsync(string stationTriplet, object userState) {
            if ((this.getReservoirMetadataOperationCompleted == null)) {
                this.getReservoirMetadataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReservoirMetadataOperationCompleted);
            }
            this.InvokeAsync("getReservoirMetadata", new object[] {
                        stationTriplet}, this.getReservoirMetadataOperationCompleted, userState);
        }
        
        private void OngetReservoirMetadataOperationCompleted(object arg) {
            if ((this.getReservoirMetadataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReservoirMetadataCompleted(this, new getReservoirMetadataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastPoint getForecastPoint([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet) {
            object[] results = this.Invoke("getForecastPoint", new object[] {
                        stationTriplet});
            return ((forecastPoint)(results[0]));
        }
        
        /// <remarks/>
        public void getForecastPointAsync(string stationTriplet) {
            this.getForecastPointAsync(stationTriplet, null);
        }
        
        /// <remarks/>
        public void getForecastPointAsync(string stationTriplet, object userState) {
            if ((this.getForecastPointOperationCompleted == null)) {
                this.getForecastPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastPointOperationCompleted);
            }
            this.InvokeAsync("getForecastPoint", new object[] {
                        stationTriplet}, this.getForecastPointOperationCompleted, userState);
        }
        
        private void OngetForecastPointOperationCompleted(object arg) {
            if ((this.getForecastPointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastPointCompleted(this, new getForecastPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public centralTendencyPeakData[] getCentralTendencyPeakData([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] duration duration, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.ComponentModel.DefaultValueAttribute(false)] bool getNumberObservationsUsed, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] centralTendencyType centralTendencyType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getFlags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool getFlagsSpecified) {
            object[] results = this.Invoke("getCentralTendencyPeakData", new object[] {
                        stationTriplets,
                        elementCd,
                        heightDepth,
                        duration,
                        getNumberObservationsUsed,
                        centralTendencyType,
                        getFlags,
                        getFlagsSpecified});
            return ((centralTendencyPeakData[])(results[0]));
        }
        
        /// <remarks/>
        public void getCentralTendencyPeakDataAsync(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getNumberObservationsUsed, centralTendencyType centralTendencyType, bool getFlags, bool getFlagsSpecified) {
            this.getCentralTendencyPeakDataAsync(stationTriplets, elementCd, heightDepth, duration, getNumberObservationsUsed, centralTendencyType, getFlags, getFlagsSpecified, null);
        }
        
        /// <remarks/>
        public void getCentralTendencyPeakDataAsync(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getNumberObservationsUsed, centralTendencyType centralTendencyType, bool getFlags, bool getFlagsSpecified, object userState) {
            if ((this.getCentralTendencyPeakDataOperationCompleted == null)) {
                this.getCentralTendencyPeakDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCentralTendencyPeakDataOperationCompleted);
            }
            this.InvokeAsync("getCentralTendencyPeakData", new object[] {
                        stationTriplets,
                        elementCd,
                        heightDepth,
                        duration,
                        getNumberObservationsUsed,
                        centralTendencyType,
                        getFlags,
                        getFlagsSpecified}, this.getCentralTendencyPeakDataOperationCompleted, userState);
        }
        
        private void OngetCentralTendencyPeakDataOperationCompleted(object arg) {
            if ((this.getCentralTendencyPeakDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCentralTendencyPeakDataCompleted(this, new getCentralTendencyPeakDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastPeriodCentralTendency[] getForecastPeriodCentralTendency([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute("periods", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] periods, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] centralTendencyType centralTendencyType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.ComponentModel.DefaultValueAttribute(false)] bool getNumberObservationsUsed) {
            object[] results = this.Invoke("getForecastPeriodCentralTendency", new object[] {
                        stationTriplets,
                        elementCd,
                        periods,
                        centralTendencyType,
                        getNumberObservationsUsed});
            return ((forecastPeriodCentralTendency[])(results[0]));
        }
        
        /// <remarks/>
        public void getForecastPeriodCentralTendencyAsync(string[] stationTriplets, string elementCd, string[] periods, centralTendencyType centralTendencyType, bool getNumberObservationsUsed) {
            this.getForecastPeriodCentralTendencyAsync(stationTriplets, elementCd, periods, centralTendencyType, getNumberObservationsUsed, null);
        }
        
        /// <remarks/>
        public void getForecastPeriodCentralTendencyAsync(string[] stationTriplets, string elementCd, string[] periods, centralTendencyType centralTendencyType, bool getNumberObservationsUsed, object userState) {
            if ((this.getForecastPeriodCentralTendencyOperationCompleted == null)) {
                this.getForecastPeriodCentralTendencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastPeriodCentralTendencyOperationCompleted);
            }
            this.InvokeAsync("getForecastPeriodCentralTendency", new object[] {
                        stationTriplets,
                        elementCd,
                        periods,
                        centralTendencyType,
                        getNumberObservationsUsed}, this.getForecastPeriodCentralTendencyOperationCompleted, userState);
        }
        
        private void OngetForecastPeriodCentralTendencyOperationCompleted(object arg) {
            if ((this.getForecastPeriodCentralTendencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastPeriodCentralTendencyCompleted(this, new getForecastPeriodCentralTendencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getForecastValue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string forecastPeriod, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int probability, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int publicationYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int publicationMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int publicationDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out decimal @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("getForecastValue", new object[] {
                        stationTriplet,
                        elementCd,
                        forecastPeriod,
                        probability,
                        publicationYear,
                        publicationMonth,
                        publicationDay});
            @return = ((decimal)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void getForecastValueAsync(string stationTriplet, string elementCd, string forecastPeriod, int probability, int publicationYear, int publicationMonth, int publicationDay) {
            this.getForecastValueAsync(stationTriplet, elementCd, forecastPeriod, probability, publicationYear, publicationMonth, publicationDay, null);
        }
        
        /// <remarks/>
        public void getForecastValueAsync(string stationTriplet, string elementCd, string forecastPeriod, int probability, int publicationYear, int publicationMonth, int publicationDay, object userState) {
            if ((this.getForecastValueOperationCompleted == null)) {
                this.getForecastValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastValueOperationCompleted);
            }
            this.InvokeAsync("getForecastValue", new object[] {
                        stationTriplet,
                        elementCd,
                        forecastPeriod,
                        probability,
                        publicationYear,
                        publicationMonth,
                        publicationDay}, this.getForecastValueOperationCompleted, userState);
        }
        
        private void OngetForecastValueOperationCompleted(object arg) {
            if ((this.getForecastValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastValueCompleted(this, new getForecastValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unit[] getUnits() {
            object[] results = this.Invoke("getUnits", new object[0]);
            return ((unit[])(results[0]));
        }
        
        /// <remarks/>
        public void getUnitsAsync() {
            this.getUnitsAsync(null);
        }
        
        /// <remarks/>
        public void getUnitsAsync(object userState) {
            if ((this.getUnitsOperationCompleted == null)) {
                this.getUnitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnitsOperationCompleted);
            }
            this.InvokeAsync("getUnits", new object[0], this.getUnitsOperationCompleted, userState);
        }
        
        private void OngetUnitsOperationCompleted(object arg) {
            if ((this.getUnitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnitsCompleted(this, new getUnitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CentralTendencySWEStatisticsData[] getCentralTendencySWETiming([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] centralTendencyType centralTendencyType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.ComponentModel.DefaultValueAttribute(false)] bool getNumberObservationsUsed) {
            object[] results = this.Invoke("getCentralTendencySWETiming", new object[] {
                        stationTriplets,
                        centralTendencyType,
                        getNumberObservationsUsed});
            return ((CentralTendencySWEStatisticsData[])(results[0]));
        }
        
        /// <remarks/>
        public void getCentralTendencySWETimingAsync(string[] stationTriplets, centralTendencyType centralTendencyType, bool getNumberObservationsUsed) {
            this.getCentralTendencySWETimingAsync(stationTriplets, centralTendencyType, getNumberObservationsUsed, null);
        }
        
        /// <remarks/>
        public void getCentralTendencySWETimingAsync(string[] stationTriplets, centralTendencyType centralTendencyType, bool getNumberObservationsUsed, object userState) {
            if ((this.getCentralTendencySWETimingOperationCompleted == null)) {
                this.getCentralTendencySWETimingOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCentralTendencySWETimingOperationCompleted);
            }
            this.InvokeAsync("getCentralTendencySWETiming", new object[] {
                        stationTriplets,
                        centralTendencyType,
                        getNumberObservationsUsed}, this.getCentralTendencySWETimingOperationCompleted, userState);
        }
        
        private void OngetCentralTendencySWETimingOperationCompleted(object arg) {
            if ((this.getCentralTendencySWETimingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCentralTendencySWETimingCompleted(this, new getCentralTendencySWETimingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public centralTendencyData[] getCentralTendencyData([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] duration duration, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.ComponentModel.DefaultValueAttribute(false)] bool getNumberObservationsUsed, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int beginMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int beginDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] centralTendencyType centralTendencyType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getFlags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool getFlagsSpecified) {
            object[] results = this.Invoke("getCentralTendencyData", new object[] {
                        stationTriplets,
                        elementCd,
                        heightDepth,
                        duration,
                        getNumberObservationsUsed,
                        beginMonth,
                        beginDay,
                        endMonth,
                        endDay,
                        centralTendencyType,
                        getFlags,
                        getFlagsSpecified});
            return ((centralTendencyData[])(results[0]));
        }
        
        /// <remarks/>
        public void getCentralTendencyDataAsync(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getNumberObservationsUsed, int beginMonth, int beginDay, int endMonth, int endDay, centralTendencyType centralTendencyType, bool getFlags, bool getFlagsSpecified) {
            this.getCentralTendencyDataAsync(stationTriplets, elementCd, heightDepth, duration, getNumberObservationsUsed, beginMonth, beginDay, endMonth, endDay, centralTendencyType, getFlags, getFlagsSpecified, null);
        }
        
        /// <remarks/>
        public void getCentralTendencyDataAsync(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getNumberObservationsUsed, int beginMonth, int beginDay, int endMonth, int endDay, centralTendencyType centralTendencyType, bool getFlags, bool getFlagsSpecified, object userState) {
            if ((this.getCentralTendencyDataOperationCompleted == null)) {
                this.getCentralTendencyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCentralTendencyDataOperationCompleted);
            }
            this.InvokeAsync("getCentralTendencyData", new object[] {
                        stationTriplets,
                        elementCd,
                        heightDepth,
                        duration,
                        getNumberObservationsUsed,
                        beginMonth,
                        beginDay,
                        endMonth,
                        endDay,
                        centralTendencyType,
                        getFlags,
                        getFlagsSpecified}, this.getCentralTendencyDataOperationCompleted, userState);
        }
        
        private void OngetCentralTendencyDataOperationCompleted(object arg) {
            if ((this.getCentralTendencyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCentralTendencyDataCompleted(this, new getCentralTendencyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stationMetaData getStationMetadata([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet) {
            object[] results = this.Invoke("getStationMetadata", new object[] {
                        stationTriplet});
            return ((stationMetaData)(results[0]));
        }
        
        /// <remarks/>
        public void getStationMetadataAsync(string stationTriplet) {
            this.getStationMetadataAsync(stationTriplet, null);
        }
        
        /// <remarks/>
        public void getStationMetadataAsync(string stationTriplet, object userState) {
            if ((this.getStationMetadataOperationCompleted == null)) {
                this.getStationMetadataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStationMetadataOperationCompleted);
            }
            this.InvokeAsync("getStationMetadata", new object[] {
                        stationTriplet}, this.getStationMetadataOperationCompleted, userState);
        }
        
        private void OngetStationMetadataOperationCompleted(object arg) {
            if ((this.getStationMetadataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStationMetadataCompleted(this, new getStationMetadataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public peakData[] getPeakData([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int ordinal, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] duration duration, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getFlags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int beginYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endYear) {
            object[] results = this.Invoke("getPeakData", new object[] {
                        stationTriplets,
                        elementCd,
                        ordinal,
                        heightDepth,
                        duration,
                        getFlags,
                        beginYear,
                        endYear});
            return ((peakData[])(results[0]));
        }
        
        /// <remarks/>
        public void getPeakDataAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, duration duration, bool getFlags, int beginYear, int endYear) {
            this.getPeakDataAsync(stationTriplets, elementCd, ordinal, heightDepth, duration, getFlags, beginYear, endYear, null);
        }
        
        /// <remarks/>
        public void getPeakDataAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, duration duration, bool getFlags, int beginYear, int endYear, object userState) {
            if ((this.getPeakDataOperationCompleted == null)) {
                this.getPeakDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPeakDataOperationCompleted);
            }
            this.InvokeAsync("getPeakData", new object[] {
                        stationTriplets,
                        elementCd,
                        ordinal,
                        heightDepth,
                        duration,
                        getFlags,
                        beginYear,
                        endYear}, this.getPeakDataOperationCompleted, userState);
        }
        
        private void OngetPeakDataOperationCompleted(object arg) {
            if ((this.getPeakDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPeakDataCompleted(this, new getPeakDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public diagnostics runDiagnostics() {
            object[] results = this.Invoke("runDiagnostics", new object[0]);
            return ((diagnostics)(results[0]));
        }
        
        /// <remarks/>
        public void runDiagnosticsAsync() {
            this.runDiagnosticsAsync(null);
        }
        
        /// <remarks/>
        public void runDiagnosticsAsync(object userState) {
            if ((this.runDiagnosticsOperationCompleted == null)) {
                this.runDiagnosticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunDiagnosticsOperationCompleted);
            }
            this.InvokeAsync("runDiagnostics", new object[0], this.runDiagnosticsOperationCompleted, userState);
        }
        
        private void OnrunDiagnosticsOperationCompleted(object arg) {
            if ((this.runDiagnosticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runDiagnosticsCompleted(this, new runDiagnosticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public configuration[] getForecastConfigurations([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string forecaster) {
            object[] results = this.Invoke("getForecastConfigurations", new object[] {
                        forecaster});
            return ((configuration[])(results[0]));
        }
        
        /// <remarks/>
        public void getForecastConfigurationsAsync(string forecaster) {
            this.getForecastConfigurationsAsync(forecaster, null);
        }
        
        /// <remarks/>
        public void getForecastConfigurationsAsync(string forecaster, object userState) {
            if ((this.getForecastConfigurationsOperationCompleted == null)) {
                this.getForecastConfigurationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastConfigurationsOperationCompleted);
            }
            this.InvokeAsync("getForecastConfigurations", new object[] {
                        forecaster}, this.getForecastConfigurationsOperationCompleted, userState);
        }
        
        private void OngetForecastConfigurationsOperationCompleted(object arg) {
            if ((this.getForecastConfigurationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastConfigurationsCompleted(this, new getForecastConfigurationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastPeriodAverage[] getForecastPeriodAverages([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute("periods", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] periods, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.ComponentModel.DefaultValueAttribute(false)] bool getNumberObservationsUsed) {
            object[] results = this.Invoke("getForecastPeriodAverages", new object[] {
                        stationTriplets,
                        elementCd,
                        periods,
                        getNumberObservationsUsed});
            return ((forecastPeriodAverage[])(results[0]));
        }
        
        /// <remarks/>
        public void getForecastPeriodAveragesAsync(string[] stationTriplets, string elementCd, string[] periods, bool getNumberObservationsUsed) {
            this.getForecastPeriodAveragesAsync(stationTriplets, elementCd, periods, getNumberObservationsUsed, null);
        }
        
        /// <remarks/>
        public void getForecastPeriodAveragesAsync(string[] stationTriplets, string elementCd, string[] periods, bool getNumberObservationsUsed, object userState) {
            if ((this.getForecastPeriodAveragesOperationCompleted == null)) {
                this.getForecastPeriodAveragesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastPeriodAveragesOperationCompleted);
            }
            this.InvokeAsync("getForecastPeriodAverages", new object[] {
                        stationTriplets,
                        elementCd,
                        periods,
                        getNumberObservationsUsed}, this.getForecastPeriodAveragesOperationCompleted, userState);
        }
        
        private void OngetForecastPeriodAveragesOperationCompleted(object arg) {
            if ((this.getForecastPeriodAveragesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastPeriodAveragesCompleted(this, new getForecastPeriodAveragesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stationElement[] getStationElements([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string beginDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string endDate) {
            object[] results = this.Invoke("getStationElements", new object[] {
                        stationTriplet,
                        beginDate,
                        endDate});
            return ((stationElement[])(results[0]));
        }
        
        /// <remarks/>
        public void getStationElementsAsync(string stationTriplet, string beginDate, string endDate) {
            this.getStationElementsAsync(stationTriplet, beginDate, endDate, null);
        }
        
        /// <remarks/>
        public void getStationElementsAsync(string stationTriplet, string beginDate, string endDate, object userState) {
            if ((this.getStationElementsOperationCompleted == null)) {
                this.getStationElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStationElementsOperationCompleted);
            }
            this.InvokeAsync("getStationElements", new object[] {
                        stationTriplet,
                        beginDate,
                        endDate}, this.getStationElementsOperationCompleted, userState);
        }
        
        private void OngetStationElementsOperationCompleted(object arg) {
            if ((this.getStationElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStationElementsCompleted(this, new getStationElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public insertedOrUpdatedData[] getDataInsertedOrUpdatedSince([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int ordinal, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] duration duration, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getFlags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string beginDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string endDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string insertOrUpdateBeginDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool alwaysReturnDailyFeb29, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool alwaysReturnDailyFeb29Specified) {
            object[] results = this.Invoke("getDataInsertedOrUpdatedSince", new object[] {
                        stationTriplets,
                        elementCd,
                        ordinal,
                        heightDepth,
                        duration,
                        getFlags,
                        beginDate,
                        endDate,
                        insertOrUpdateBeginDate,
                        alwaysReturnDailyFeb29,
                        alwaysReturnDailyFeb29Specified});
            return ((insertedOrUpdatedData[])(results[0]));
        }
        
        /// <remarks/>
        public void getDataInsertedOrUpdatedSinceAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, duration duration, bool getFlags, string beginDate, string endDate, string insertOrUpdateBeginDate, bool alwaysReturnDailyFeb29, bool alwaysReturnDailyFeb29Specified) {
            this.getDataInsertedOrUpdatedSinceAsync(stationTriplets, elementCd, ordinal, heightDepth, duration, getFlags, beginDate, endDate, insertOrUpdateBeginDate, alwaysReturnDailyFeb29, alwaysReturnDailyFeb29Specified, null);
        }
        
        /// <remarks/>
        public void getDataInsertedOrUpdatedSinceAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, duration duration, bool getFlags, string beginDate, string endDate, string insertOrUpdateBeginDate, bool alwaysReturnDailyFeb29, bool alwaysReturnDailyFeb29Specified, object userState) {
            if ((this.getDataInsertedOrUpdatedSinceOperationCompleted == null)) {
                this.getDataInsertedOrUpdatedSinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataInsertedOrUpdatedSinceOperationCompleted);
            }
            this.InvokeAsync("getDataInsertedOrUpdatedSince", new object[] {
                        stationTriplets,
                        elementCd,
                        ordinal,
                        heightDepth,
                        duration,
                        getFlags,
                        beginDate,
                        endDate,
                        insertOrUpdateBeginDate,
                        alwaysReturnDailyFeb29,
                        alwaysReturnDailyFeb29Specified}, this.getDataInsertedOrUpdatedSinceOperationCompleted, userState);
        }
        
        private void OngetDataInsertedOrUpdatedSinceOperationCompleted(object arg) {
            if ((this.getDataInsertedOrUpdatedSinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataInsertedOrUpdatedSinceCompleted(this, new getDataInsertedOrUpdatedSinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public averagesData[] getAveragesData([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] duration duration, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.ComponentModel.DefaultValueAttribute(false)] bool getNumberObservationsUsed, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int beginMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int beginDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getFlags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool getFlagsSpecified) {
            object[] results = this.Invoke("getAveragesData", new object[] {
                        stationTriplets,
                        elementCd,
                        heightDepth,
                        duration,
                        getNumberObservationsUsed,
                        beginMonth,
                        beginDay,
                        endMonth,
                        endDay,
                        getFlags,
                        getFlagsSpecified});
            return ((averagesData[])(results[0]));
        }
        
        /// <remarks/>
        public void getAveragesDataAsync(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getNumberObservationsUsed, int beginMonth, int beginDay, int endMonth, int endDay, bool getFlags, bool getFlagsSpecified) {
            this.getAveragesDataAsync(stationTriplets, elementCd, heightDepth, duration, getNumberObservationsUsed, beginMonth, beginDay, endMonth, endDay, getFlags, getFlagsSpecified, null);
        }
        
        /// <remarks/>
        public void getAveragesDataAsync(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getNumberObservationsUsed, int beginMonth, int beginDay, int endMonth, int endDay, bool getFlags, bool getFlagsSpecified, object userState) {
            if ((this.getAveragesDataOperationCompleted == null)) {
                this.getAveragesDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAveragesDataOperationCompleted);
            }
            this.InvokeAsync("getAveragesData", new object[] {
                        stationTriplets,
                        elementCd,
                        heightDepth,
                        duration,
                        getNumberObservationsUsed,
                        beginMonth,
                        beginDay,
                        endMonth,
                        endDay,
                        getFlags,
                        getFlagsSpecified}, this.getAveragesDataOperationCompleted, userState);
        }
        
        private void OngetAveragesDataOperationCompleted(object arg) {
            if ((this.getAveragesDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAveragesDataCompleted(this, new getAveragesDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastPeriod[] getForecastPeriods() {
            object[] results = this.Invoke("getForecastPeriods", new object[0]);
            return ((forecastPeriod[])(results[0]));
        }
        
        /// <remarks/>
        public void getForecastPeriodsAsync() {
            this.getForecastPeriodsAsync(null);
        }
        
        /// <remarks/>
        public void getForecastPeriodsAsync(object userState) {
            if ((this.getForecastPeriodsOperationCompleted == null)) {
                this.getForecastPeriodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastPeriodsOperationCompleted);
            }
            this.InvokeAsync("getForecastPeriods", new object[0], this.getForecastPeriodsOperationCompleted, userState);
        }
        
        private void OngetForecastPeriodsOperationCompleted(object arg) {
            if ((this.getForecastPeriodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastPeriodsCompleted(this, new getForecastPeriodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public heightDepth[] getHeightDepths() {
            object[] results = this.Invoke("getHeightDepths", new object[0]);
            return ((heightDepth[])(results[0]));
        }
        
        /// <remarks/>
        public void getHeightDepthsAsync() {
            this.getHeightDepthsAsync(null);
        }
        
        /// <remarks/>
        public void getHeightDepthsAsync(object userState) {
            if ((this.getHeightDepthsOperationCompleted == null)) {
                this.getHeightDepthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHeightDepthsOperationCompleted);
            }
            this.InvokeAsync("getHeightDepths", new object[0], this.getHeightDepthsOperationCompleted, userState);
        }
        
        private void OngetHeightDepthsOperationCompleted(object arg) {
            if ((this.getHeightDepthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHeightDepthsCompleted(this, new getHeightDepthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool areYouThere() {
            object[] results = this.Invoke("areYouThere", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void areYouThereAsync() {
            this.areYouThereAsync(null);
        }
        
        /// <remarks/>
        public void areYouThereAsync(object userState) {
            if ((this.areYouThereOperationCompleted == null)) {
                this.areYouThereOperationCompleted = new System.Threading.SendOrPostCallback(this.OnareYouThereOperationCompleted);
            }
            this.InvokeAsync("areYouThere", new object[0], this.areYouThereOperationCompleted, userState);
        }
        
        private void OnareYouThereOperationCompleted(object arg) {
            if ((this.areYouThereCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.areYouThereCompleted(this, new areYouThereCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public reservoirMetadata[] getReservoirMetadataMultiple([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets) {
            object[] results = this.Invoke("getReservoirMetadataMultiple", new object[] {
                        stationTriplets});
            return ((reservoirMetadata[])(results[0]));
        }
        
        /// <remarks/>
        public void getReservoirMetadataMultipleAsync(string[] stationTriplets) {
            this.getReservoirMetadataMultipleAsync(stationTriplets, null);
        }
        
        /// <remarks/>
        public void getReservoirMetadataMultipleAsync(string[] stationTriplets, object userState) {
            if ((this.getReservoirMetadataMultipleOperationCompleted == null)) {
                this.getReservoirMetadataMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReservoirMetadataMultipleOperationCompleted);
            }
            this.InvokeAsync("getReservoirMetadataMultiple", new object[] {
                        stationTriplets}, this.getReservoirMetadataMultipleOperationCompleted, userState);
        }
        
        private void OngetReservoirMetadataMultipleOperationCompleted(object arg) {
            if ((this.getReservoirMetadataMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReservoirMetadataMultipleCompleted(this, new getReservoirMetadataMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public instantaneousData[] getInstantaneousData([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int ordinal, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string beginDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string endDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] instantaneousDataFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] unitSystem unitSystem) {
            object[] results = this.Invoke("getInstantaneousData", new object[] {
                        stationTriplets,
                        elementCd,
                        ordinal,
                        heightDepth,
                        beginDate,
                        endDate,
                        filter,
                        unitSystem});
            return ((instantaneousData[])(results[0]));
        }
        
        /// <remarks/>
        public void getInstantaneousDataAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, string beginDate, string endDate, instantaneousDataFilter filter, unitSystem unitSystem) {
            this.getInstantaneousDataAsync(stationTriplets, elementCd, ordinal, heightDepth, beginDate, endDate, filter, unitSystem, null);
        }
        
        /// <remarks/>
        public void getInstantaneousDataAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, string beginDate, string endDate, instantaneousDataFilter filter, unitSystem unitSystem, object userState) {
            if ((this.getInstantaneousDataOperationCompleted == null)) {
                this.getInstantaneousDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInstantaneousDataOperationCompleted);
            }
            this.InvokeAsync("getInstantaneousData", new object[] {
                        stationTriplets,
                        elementCd,
                        ordinal,
                        heightDepth,
                        beginDate,
                        endDate,
                        filter,
                        unitSystem}, this.getInstantaneousDataOperationCompleted, userState);
        }
        
        private void OngetInstantaneousDataOperationCompleted(object arg) {
            if ((this.getInstantaneousDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInstantaneousDataCompleted(this, new getInstantaneousDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public data[] getData([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int ordinal, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] duration duration, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getFlags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string beginDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string endDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool alwaysReturnDailyFeb29, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool alwaysReturnDailyFeb29Specified) {
            object[] results = this.Invoke("getData", new object[] {
                        stationTriplets,
                        elementCd,
                        ordinal,
                        heightDepth,
                        duration,
                        getFlags,
                        beginDate,
                        endDate,
                        alwaysReturnDailyFeb29,
                        alwaysReturnDailyFeb29Specified});
            return ((data[])(results[0]));
        }
        
        /// <remarks/>
        public void getDataAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, duration duration, bool getFlags, string beginDate, string endDate, bool alwaysReturnDailyFeb29, bool alwaysReturnDailyFeb29Specified) {
            this.getDataAsync(stationTriplets, elementCd, ordinal, heightDepth, duration, getFlags, beginDate, endDate, alwaysReturnDailyFeb29, alwaysReturnDailyFeb29Specified, null);
        }
        
        /// <remarks/>
        public void getDataAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, duration duration, bool getFlags, string beginDate, string endDate, bool alwaysReturnDailyFeb29, bool alwaysReturnDailyFeb29Specified, object userState) {
            if ((this.getDataOperationCompleted == null)) {
                this.getDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataOperationCompleted);
            }
            this.InvokeAsync("getData", new object[] {
                        stationTriplets,
                        elementCd,
                        ordinal,
                        heightDepth,
                        duration,
                        getFlags,
                        beginDate,
                        endDate,
                        alwaysReturnDailyFeb29,
                        alwaysReturnDailyFeb29Specified}, this.getDataOperationCompleted, userState);
        }
        
        private void OngetDataOperationCompleted(object arg) {
            if ((this.getDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataCompleted(this, new getDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecast getForecast([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string forecastPeriod, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string publicationDate) {
            object[] results = this.Invoke("getForecast", new object[] {
                        stationTriplet,
                        elementCd,
                        forecastPeriod,
                        publicationDate});
            return ((forecast)(results[0]));
        }
        
        /// <remarks/>
        public void getForecastAsync(string stationTriplet, string elementCd, string forecastPeriod, string publicationDate) {
            this.getForecastAsync(stationTriplet, elementCd, forecastPeriod, publicationDate, null);
        }
        
        /// <remarks/>
        public void getForecastAsync(string stationTriplet, string elementCd, string forecastPeriod, string publicationDate, object userState) {
            if ((this.getForecastOperationCompleted == null)) {
                this.getForecastOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastOperationCompleted);
            }
            this.InvokeAsync("getForecast", new object[] {
                        stationTriplet,
                        elementCd,
                        forecastPeriod,
                        publicationDate}, this.getForecastOperationCompleted, userState);
        }
        
        private void OngetForecastOperationCompleted(object arg) {
            if ((this.getForecastCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastCompleted(this, new getForecastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getStations(
                    [System.Xml.Serialization.XmlElementAttribute("stationIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationIds, 
                    [System.Xml.Serialization.XmlElementAttribute("stateCds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stateCds, 
                    [System.Xml.Serialization.XmlElementAttribute("networkCds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] networkCds, 
                    [System.Xml.Serialization.XmlElementAttribute("hucs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] hucs, 
                    [System.Xml.Serialization.XmlElementAttribute("countyNames", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] countyNames, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] decimal minLatitude, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool minLatitudeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] decimal maxLatitude, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool maxLatitudeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] decimal minLongitude, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool minLongitudeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] decimal maxLongitude, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool maxLongitudeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] decimal minElevation, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool minElevationSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] decimal maxElevation, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool maxElevationSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute("elementCds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] elementCds, 
                    [System.Xml.Serialization.XmlElementAttribute("ordinals", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int[] ordinals, 
                    [System.Xml.Serialization.XmlElementAttribute("heightDepths", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth[] heightDepths, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool logicalAnd) {
            object[] results = this.Invoke("getStations", new object[] {
                        stationIds,
                        stateCds,
                        networkCds,
                        hucs,
                        countyNames,
                        minLatitude,
                        minLatitudeSpecified,
                        maxLatitude,
                        maxLatitudeSpecified,
                        minLongitude,
                        minLongitudeSpecified,
                        maxLongitude,
                        maxLongitudeSpecified,
                        minElevation,
                        minElevationSpecified,
                        maxElevation,
                        maxElevationSpecified,
                        elementCds,
                        ordinals,
                        heightDepths,
                        logicalAnd});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getStationsAsync(
                    string[] stationIds, 
                    string[] stateCds, 
                    string[] networkCds, 
                    string[] hucs, 
                    string[] countyNames, 
                    decimal minLatitude, 
                    bool minLatitudeSpecified, 
                    decimal maxLatitude, 
                    bool maxLatitudeSpecified, 
                    decimal minLongitude, 
                    bool minLongitudeSpecified, 
                    decimal maxLongitude, 
                    bool maxLongitudeSpecified, 
                    decimal minElevation, 
                    bool minElevationSpecified, 
                    decimal maxElevation, 
                    bool maxElevationSpecified, 
                    string[] elementCds, 
                    int[] ordinals, 
                    heightDepth[] heightDepths, 
                    bool logicalAnd) {
            this.getStationsAsync(stationIds, stateCds, networkCds, hucs, countyNames, minLatitude, minLatitudeSpecified, maxLatitude, maxLatitudeSpecified, minLongitude, minLongitudeSpecified, maxLongitude, maxLongitudeSpecified, minElevation, minElevationSpecified, maxElevation, maxElevationSpecified, elementCds, ordinals, heightDepths, logicalAnd, null);
        }
        
        /// <remarks/>
        public void getStationsAsync(
                    string[] stationIds, 
                    string[] stateCds, 
                    string[] networkCds, 
                    string[] hucs, 
                    string[] countyNames, 
                    decimal minLatitude, 
                    bool minLatitudeSpecified, 
                    decimal maxLatitude, 
                    bool maxLatitudeSpecified, 
                    decimal minLongitude, 
                    bool minLongitudeSpecified, 
                    decimal maxLongitude, 
                    bool maxLongitudeSpecified, 
                    decimal minElevation, 
                    bool minElevationSpecified, 
                    decimal maxElevation, 
                    bool maxElevationSpecified, 
                    string[] elementCds, 
                    int[] ordinals, 
                    heightDepth[] heightDepths, 
                    bool logicalAnd, 
                    object userState) {
            if ((this.getStationsOperationCompleted == null)) {
                this.getStationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStationsOperationCompleted);
            }
            this.InvokeAsync("getStations", new object[] {
                        stationIds,
                        stateCds,
                        networkCds,
                        hucs,
                        countyNames,
                        minLatitude,
                        minLatitudeSpecified,
                        maxLatitude,
                        maxLatitudeSpecified,
                        minLongitude,
                        minLongitudeSpecified,
                        maxLongitude,
                        maxLongitudeSpecified,
                        minElevation,
                        minElevationSpecified,
                        maxElevation,
                        maxElevationSpecified,
                        elementCds,
                        ordinals,
                        heightDepths,
                        logicalAnd}, this.getStationsOperationCompleted, userState);
        }
        
        private void OngetStationsOperationCompleted(object arg) {
            if ((this.getStationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStationsCompleted(this, new getStationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecast[] getForecastsByPubDate([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string forecastPeriod, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string beginPublicationDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string endPublicationDate) {
            object[] results = this.Invoke("getForecastsByPubDate", new object[] {
                        stationTriplet,
                        elementCd,
                        forecastPeriod,
                        beginPublicationDate,
                        endPublicationDate});
            return ((forecast[])(results[0]));
        }
        
        /// <remarks/>
        public void getForecastsByPubDateAsync(string stationTriplet, string elementCd, string forecastPeriod, string beginPublicationDate, string endPublicationDate) {
            this.getForecastsByPubDateAsync(stationTriplet, elementCd, forecastPeriod, beginPublicationDate, endPublicationDate, null);
        }
        
        /// <remarks/>
        public void getForecastsByPubDateAsync(string stationTriplet, string elementCd, string forecastPeriod, string beginPublicationDate, string endPublicationDate, object userState) {
            if ((this.getForecastsByPubDateOperationCompleted == null)) {
                this.getForecastsByPubDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastsByPubDateOperationCompleted);
            }
            this.InvokeAsync("getForecastsByPubDate", new object[] {
                        stationTriplet,
                        elementCd,
                        forecastPeriod,
                        beginPublicationDate,
                        endPublicationDate}, this.getForecastsByPubDateOperationCompleted, userState);
        }
        
        private void OngetForecastsByPubDateOperationCompleted(object arg) {
            if ((this.getForecastsByPubDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastsByPubDateCompleted(this, new getForecastsByPubDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getUnitName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string unitCd) {
            object[] results = this.Invoke("getUnitName", new object[] {
                        unitCd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUnitNameAsync(string unitCd) {
            this.getUnitNameAsync(unitCd, null);
        }
        
        /// <remarks/>
        public void getUnitNameAsync(string unitCd, object userState) {
            if ((this.getUnitNameOperationCompleted == null)) {
                this.getUnitNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnitNameOperationCompleted);
            }
            this.InvokeAsync("getUnitName", new object[] {
                        unitCd}, this.getUnitNameOperationCompleted, userState);
        }
        
        private void OngetUnitNameOperationCompleted(object arg) {
            if ((this.getUnitNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnitNameCompleted(this, new getUnitNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastFull[] getAllForecastsForStation([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string beginPublicationDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string endPublicationDate) {
            object[] results = this.Invoke("getAllForecastsForStation", new object[] {
                        stationTriplet,
                        beginPublicationDate,
                        endPublicationDate});
            return ((forecastFull[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllForecastsForStationAsync(string stationTriplet, string beginPublicationDate, string endPublicationDate) {
            this.getAllForecastsForStationAsync(stationTriplet, beginPublicationDate, endPublicationDate, null);
        }
        
        /// <remarks/>
        public void getAllForecastsForStationAsync(string stationTriplet, string beginPublicationDate, string endPublicationDate, object userState) {
            if ((this.getAllForecastsForStationOperationCompleted == null)) {
                this.getAllForecastsForStationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllForecastsForStationOperationCompleted);
            }
            this.InvokeAsync("getAllForecastsForStation", new object[] {
                        stationTriplet,
                        beginPublicationDate,
                        endPublicationDate}, this.getAllForecastsForStationOperationCompleted, userState);
        }
        
        private void OngetAllForecastsForStationOperationCompleted(object arg) {
            if ((this.getAllForecastsForStationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllForecastsForStationCompleted(this, new getAllForecastsForStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastEquation[] getForecastEquationsMultiple([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets) {
            object[] results = this.Invoke("getForecastEquationsMultiple", new object[] {
                        stationTriplets});
            return ((forecastEquation[])(results[0]));
        }
        
        /// <remarks/>
        public void getForecastEquationsMultipleAsync(string[] stationTriplets) {
            this.getForecastEquationsMultipleAsync(stationTriplets, null);
        }
        
        /// <remarks/>
        public void getForecastEquationsMultipleAsync(string[] stationTriplets, object userState) {
            if ((this.getForecastEquationsMultipleOperationCompleted == null)) {
                this.getForecastEquationsMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastEquationsMultipleOperationCompleted);
            }
            this.InvokeAsync("getForecastEquationsMultiple", new object[] {
                        stationTriplets}, this.getForecastEquationsMultipleOperationCompleted, userState);
        }
        
        private void OngetForecastEquationsMultipleOperationCompleted(object arg) {
            if ((this.getForecastEquationsMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastEquationsMultipleCompleted(this, new getForecastEquationsMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public averagesPeakData[] getAveragesPeak([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] duration duration, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.ComponentModel.DefaultValueAttribute(false)] bool getNumberObservationsUsed, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getFlags, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool getFlagsSpecified) {
            object[] results = this.Invoke("getAveragesPeak", new object[] {
                        stationTriplets,
                        elementCd,
                        heightDepth,
                        duration,
                        getNumberObservationsUsed,
                        getFlags,
                        getFlagsSpecified});
            return ((averagesPeakData[])(results[0]));
        }
        
        /// <remarks/>
        public void getAveragesPeakAsync(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getNumberObservationsUsed, bool getFlags, bool getFlagsSpecified) {
            this.getAveragesPeakAsync(stationTriplets, elementCd, heightDepth, duration, getNumberObservationsUsed, getFlags, getFlagsSpecified, null);
        }
        
        /// <remarks/>
        public void getAveragesPeakAsync(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getNumberObservationsUsed, bool getFlags, bool getFlagsSpecified, object userState) {
            if ((this.getAveragesPeakOperationCompleted == null)) {
                this.getAveragesPeakOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAveragesPeakOperationCompleted);
            }
            this.InvokeAsync("getAveragesPeak", new object[] {
                        stationTriplets,
                        elementCd,
                        heightDepth,
                        duration,
                        getNumberObservationsUsed,
                        getFlags,
                        getFlagsSpecified}, this.getAveragesPeakOperationCompleted, userState);
        }
        
        private void OngetAveragesPeakOperationCompleted(object arg) {
            if ((this.getAveragesPeakCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAveragesPeakCompleted(this, new getAveragesPeakCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public instantaneousData[] getInstantaneousDataInsertedOrUpdatedSince([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int ordinal, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string beginDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string endDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string insertOrUpdateBeginDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] instantaneousDataFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] unitSystem unitSystem) {
            object[] results = this.Invoke("getInstantaneousDataInsertedOrUpdatedSince", new object[] {
                        stationTriplets,
                        elementCd,
                        ordinal,
                        heightDepth,
                        beginDate,
                        endDate,
                        insertOrUpdateBeginDate,
                        filter,
                        unitSystem});
            return ((instantaneousData[])(results[0]));
        }
        
        /// <remarks/>
        public void getInstantaneousDataInsertedOrUpdatedSinceAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, string beginDate, string endDate, string insertOrUpdateBeginDate, instantaneousDataFilter filter, unitSystem unitSystem) {
            this.getInstantaneousDataInsertedOrUpdatedSinceAsync(stationTriplets, elementCd, ordinal, heightDepth, beginDate, endDate, insertOrUpdateBeginDate, filter, unitSystem, null);
        }
        
        /// <remarks/>
        public void getInstantaneousDataInsertedOrUpdatedSinceAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, string beginDate, string endDate, string insertOrUpdateBeginDate, instantaneousDataFilter filter, unitSystem unitSystem, object userState) {
            if ((this.getInstantaneousDataInsertedOrUpdatedSinceOperationCompleted == null)) {
                this.getInstantaneousDataInsertedOrUpdatedSinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInstantaneousDataInsertedOrUpdatedSinceOperationCompleted);
            }
            this.InvokeAsync("getInstantaneousDataInsertedOrUpdatedSince", new object[] {
                        stationTriplets,
                        elementCd,
                        ordinal,
                        heightDepth,
                        beginDate,
                        endDate,
                        insertOrUpdateBeginDate,
                        filter,
                        unitSystem}, this.getInstantaneousDataInsertedOrUpdatedSinceOperationCompleted, userState);
        }
        
        private void OngetInstantaneousDataInsertedOrUpdatedSinceOperationCompleted(object arg) {
            if ((this.getInstantaneousDataInsertedOrUpdatedSinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInstantaneousDataInsertedOrUpdatedSinceCompleted(this, new getInstantaneousDataInsertedOrUpdatedSinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stationDataAssuredFlags[] getStationDataAssuredFlags([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int ordinal, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string durationCd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int beginWaterYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endWaterYear) {
            object[] results = this.Invoke("getStationDataAssuredFlags", new object[] {
                        stationTriplets,
                        elementCd,
                        ordinal,
                        heightDepth,
                        durationCd,
                        beginWaterYear,
                        endWaterYear});
            return ((stationDataAssuredFlags[])(results[0]));
        }
        
        /// <remarks/>
        public void getStationDataAssuredFlagsAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, string durationCd, int beginWaterYear, int endWaterYear) {
            this.getStationDataAssuredFlagsAsync(stationTriplets, elementCd, ordinal, heightDepth, durationCd, beginWaterYear, endWaterYear, null);
        }
        
        /// <remarks/>
        public void getStationDataAssuredFlagsAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, string durationCd, int beginWaterYear, int endWaterYear, object userState) {
            if ((this.getStationDataAssuredFlagsOperationCompleted == null)) {
                this.getStationDataAssuredFlagsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStationDataAssuredFlagsOperationCompleted);
            }
            this.InvokeAsync("getStationDataAssuredFlags", new object[] {
                        stationTriplets,
                        elementCd,
                        ordinal,
                        heightDepth,
                        durationCd,
                        beginWaterYear,
                        endWaterYear}, this.getStationDataAssuredFlagsOperationCompleted, userState);
        }
        
        private void OngetStationDataAssuredFlagsOperationCompleted(object arg) {
            if ((this.getStationDataAssuredFlagsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStationDataAssuredFlagsCompleted(this, new getStationDataAssuredFlagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastPoint[] getForecastPoints([System.Xml.Serialization.XmlElementAttribute("stationIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationIds, [System.Xml.Serialization.XmlElementAttribute("stateCds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stateCds, [System.Xml.Serialization.XmlElementAttribute("networkCds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] networkCds, [System.Xml.Serialization.XmlElementAttribute("forecastPointNames", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] forecastPointNames, [System.Xml.Serialization.XmlElementAttribute("hucs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] hucs, [System.Xml.Serialization.XmlElementAttribute("forecasters", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] forecasters, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool logicalAnd) {
            object[] results = this.Invoke("getForecastPoints", new object[] {
                        stationIds,
                        stateCds,
                        networkCds,
                        forecastPointNames,
                        hucs,
                        forecasters,
                        logicalAnd});
            return ((forecastPoint[])(results[0]));
        }
        
        /// <remarks/>
        public void getForecastPointsAsync(string[] stationIds, string[] stateCds, string[] networkCds, string[] forecastPointNames, string[] hucs, string[] forecasters, bool logicalAnd) {
            this.getForecastPointsAsync(stationIds, stateCds, networkCds, forecastPointNames, hucs, forecasters, logicalAnd, null);
        }
        
        /// <remarks/>
        public void getForecastPointsAsync(string[] stationIds, string[] stateCds, string[] networkCds, string[] forecastPointNames, string[] hucs, string[] forecasters, bool logicalAnd, object userState) {
            if ((this.getForecastPointsOperationCompleted == null)) {
                this.getForecastPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastPointsOperationCompleted);
            }
            this.InvokeAsync("getForecastPoints", new object[] {
                        stationIds,
                        stateCds,
                        networkCds,
                        forecastPointNames,
                        hucs,
                        forecasters,
                        logicalAnd}, this.getForecastPointsOperationCompleted, userState);
        }
        
        private void OngetForecastPointsOperationCompleted(object arg) {
            if ((this.getForecastPointsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastPointsCompleted(this, new getForecastPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stationMetaData[] getStationMetadataMultiple([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets) {
            object[] results = this.Invoke("getStationMetadataMultiple", new object[] {
                        stationTriplets});
            return ((stationMetaData[])(results[0]));
        }
        
        /// <remarks/>
        public void getStationMetadataMultipleAsync(string[] stationTriplets) {
            this.getStationMetadataMultipleAsync(stationTriplets, null);
        }
        
        /// <remarks/>
        public void getStationMetadataMultipleAsync(string[] stationTriplets, object userState) {
            if ((this.getStationMetadataMultipleOperationCompleted == null)) {
                this.getStationMetadataMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStationMetadataMultipleOperationCompleted);
            }
            this.InvokeAsync("getStationMetadataMultiple", new object[] {
                        stationTriplets}, this.getStationMetadataMultipleOperationCompleted, userState);
        }
        
        private void OngetStationMetadataMultipleOperationCompleted(object arg) {
            if ((this.getStationMetadataMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStationMetadataMultipleCompleted(this, new getStationMetadataMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class element {
        
        private string elementCdField;
        
        private string nameField;
        
        private string storedUnitCdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string elementCd {
            get {
                return this.elementCdField;
            }
            set {
                this.elementCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storedUnitCd {
            get {
                return this.storedUnitCdField;
            }
            set {
                this.storedUnitCdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class stationDataAssuredFlags {
        
        private string[] assuredFlagsField;
        
        private string stationTripletField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("assuredFlags", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] assuredFlags {
            get {
                return this.assuredFlagsField;
            }
            set {
                this.assuredFlagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet {
            get {
                return this.stationTripletField;
            }
            set {
                this.stationTripletField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class forecastFull {
        
        private string commentField;
        
        private configuration configurationField;
        
        private string coordinatedForecastIssueDateField;
        
        private System.Nullable<decimal>[] coordinatedForecastProbabilitiesField;
        
        private System.Nullable<decimal>[] coordinatedForecastValuesField;
        
        private string elementCdField;
        
        private forecastEquation equationField;
        
        private bool forecastFinalField;
        
        private string forecastPeriodCdField;
        
        private string forecastPeriodNameField;
        
        private string forecasterField;
        
        private string hydrologistForecastIssueDateField;
        
        private System.Nullable<decimal>[] hydrologistForecastProbabilitiesField;
        
        private System.Nullable<decimal>[] hydrologistForecastValuesField;
        
        private string originalForecastIssueDateField;
        
        private System.Nullable<decimal>[] originalForecastProbabilitiesField;
        
        private System.Nullable<decimal>[] originalForecastValuesField;
        
        private string[] otherAgencyCdsField;
        
        private System.Nullable<decimal>[] otherAgencyForecastValuesField;
        
        private decimal periodAverageField;
        
        private bool periodAverageFieldSpecified;
        
        private string publicationDateField;
        
        private string stationTripletField;
        
        private string unitCdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public configuration configuration {
            get {
                return this.configurationField;
            }
            set {
                this.configurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string coordinatedForecastIssueDate {
            get {
                return this.coordinatedForecastIssueDateField;
            }
            set {
                this.coordinatedForecastIssueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("coordinatedForecastProbabilities", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<decimal>[] coordinatedForecastProbabilities {
            get {
                return this.coordinatedForecastProbabilitiesField;
            }
            set {
                this.coordinatedForecastProbabilitiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("coordinatedForecastValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<decimal>[] coordinatedForecastValues {
            get {
                return this.coordinatedForecastValuesField;
            }
            set {
                this.coordinatedForecastValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string elementCd {
            get {
                return this.elementCdField;
            }
            set {
                this.elementCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastEquation equation {
            get {
                return this.equationField;
            }
            set {
                this.equationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool forecastFinal {
            get {
                return this.forecastFinalField;
            }
            set {
                this.forecastFinalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastPeriodCd {
            get {
                return this.forecastPeriodCdField;
            }
            set {
                this.forecastPeriodCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastPeriodName {
            get {
                return this.forecastPeriodNameField;
            }
            set {
                this.forecastPeriodNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecaster {
            get {
                return this.forecasterField;
            }
            set {
                this.forecasterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hydrologistForecastIssueDate {
            get {
                return this.hydrologistForecastIssueDateField;
            }
            set {
                this.hydrologistForecastIssueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("hydrologistForecastProbabilities", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<decimal>[] hydrologistForecastProbabilities {
            get {
                return this.hydrologistForecastProbabilitiesField;
            }
            set {
                this.hydrologistForecastProbabilitiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("hydrologistForecastValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<decimal>[] hydrologistForecastValues {
            get {
                return this.hydrologistForecastValuesField;
            }
            set {
                this.hydrologistForecastValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string originalForecastIssueDate {
            get {
                return this.originalForecastIssueDateField;
            }
            set {
                this.originalForecastIssueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("originalForecastProbabilities", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<decimal>[] originalForecastProbabilities {
            get {
                return this.originalForecastProbabilitiesField;
            }
            set {
                this.originalForecastProbabilitiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("originalForecastValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<decimal>[] originalForecastValues {
            get {
                return this.originalForecastValuesField;
            }
            set {
                this.originalForecastValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("otherAgencyCds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] otherAgencyCds {
            get {
                return this.otherAgencyCdsField;
            }
            set {
                this.otherAgencyCdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("otherAgencyForecastValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<decimal>[] otherAgencyForecastValues {
            get {
                return this.otherAgencyForecastValuesField;
            }
            set {
                this.otherAgencyForecastValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal periodAverage {
            get {
                return this.periodAverageField;
            }
            set {
                this.periodAverageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool periodAverageSpecified {
            get {
                return this.periodAverageFieldSpecified;
            }
            set {
                this.periodAverageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string publicationDate {
            get {
                return this.publicationDateField;
            }
            set {
                this.publicationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet {
            get {
                return this.stationTripletField;
            }
            set {
                this.stationTripletField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCd {
            get {
                return this.unitCdField;
            }
            set {
                this.unitCdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class configuration {
        
        private string analysisTypeField;
        
        private int calibrationEndYearField;
        
        private int calibrationStartYearField;
        
        private string commentField;
        
        private int componentsToRetainField;
        
        private string creationDateField;
        
        private bool dailyForecastField;
        
        private decimal dailyForecastThresholdField;
        
        private bool dailyForecastThresholdFieldSpecified;
        
        private bool dailyForecastThresholdRelativeField;
        
        private bool dataForcedSeriallyCompleteField;
        
        private int degreesOfFreedomField;
        
        private string forecastConditionField;
        
        private string forecastTypeField;
        
        private string forecasterField;
        
        private decimal functionArgumentField;
        
        private bool functionArgumentFieldSpecified;
        
        private string functionCdField;
        
        private string helperDataSourceField;
        
        private string helperElementCdField;
        
        private int helperEndDayField;
        
        private int helperEndMonthField;
        
        private string helperEndYearFlagField;
        
        private int helperMixedPastEndDayField;
        
        private int helperMixedPastEndMonthField;
        
        private string helperMixedPastEndYearFlagField;
        
        private int helperMixedPastStartDayField;
        
        private int helperMixedPastStartMonthField;
        
        private string helperMixedPastStartYearFlagField;
        
        private bool helperPredictorUsedField;
        
        private int helperStartDayField;
        
        private int helperStartMonthField;
        
        private string helperStartYearFlagField;
        
        private string helperStationTripletField;
        
        private bool helperUsedInOverlappingYearsField;
        
        private bool helperVarianceMatchedToObservedField;
        
        private bool jackKnifingUsedField;
        
        private int keyField;
        
        private decimal minimumR2ForPredictorField;
        
        private bool minimumR2ForPredictorFieldSpecified;
        
        private int minimumYearsForPredictorField;
        
        private int mixedPastEndDayField;
        
        private int mixedPastEndMonthField;
        
        private string mixedPastEndYearFlagField;
        
        private int mixedPastStartDayField;
        
        private int mixedPastStartMonthField;
        
        private string mixedPastStartYearFlagField;
        
        private bool mixedPastUsedField;
        
        private string nameField;
        
        private int numYearsUsedField;
        
        private bool optimalWeightingUsedField;
        
        private decimal overrideAverageField;
        
        private bool overrideAverageFieldSpecified;
        
        private decimal overrideStderrField;
        
        private bool overrideStderrFieldSpecified;
        
        private decimal pastFlowRealtimeField;
        
        private bool pastFlowRealtimeFieldSpecified;
        
        private predictorGroup[] predictorGroupsField;
        
        private predictor[] predictorsField;
        
        private decimal preprocessingConstantField;
        
        private bool preprocessingConstantFieldSpecified;
        
        private decimal preprocessingMultiplierField;
        
        private bool preprocessingMultiplierFieldSpecified;
        
        private string publicationCdField;
        
        private decimal tTestLimitField;
        
        private bool tTestLimitFieldSpecified;
        
        private string targetDataSourceField;
        
        private string targetElementCdField;
        
        private int targetEndDayField;
        
        private int targetEndMonthField;
        
        private string targetEndYearFlagField;
        
        private int targetStartDayField;
        
        private int targetStartMonthField;
        
        private string targetStartYearFlagField;
        
        private string targetStationNameField;
        
        private string targetStationTripletField;
        
        private bool transformErrorsOnlyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string analysisType {
            get {
                return this.analysisTypeField;
            }
            set {
                this.analysisTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int calibrationEndYear {
            get {
                return this.calibrationEndYearField;
            }
            set {
                this.calibrationEndYearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int calibrationStartYear {
            get {
                return this.calibrationStartYearField;
            }
            set {
                this.calibrationStartYearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int componentsToRetain {
            get {
                return this.componentsToRetainField;
            }
            set {
                this.componentsToRetainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string creationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dailyForecast {
            get {
                return this.dailyForecastField;
            }
            set {
                this.dailyForecastField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal dailyForecastThreshold {
            get {
                return this.dailyForecastThresholdField;
            }
            set {
                this.dailyForecastThresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dailyForecastThresholdSpecified {
            get {
                return this.dailyForecastThresholdFieldSpecified;
            }
            set {
                this.dailyForecastThresholdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dailyForecastThresholdRelative {
            get {
                return this.dailyForecastThresholdRelativeField;
            }
            set {
                this.dailyForecastThresholdRelativeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dataForcedSeriallyComplete {
            get {
                return this.dataForcedSeriallyCompleteField;
            }
            set {
                this.dataForcedSeriallyCompleteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int degreesOfFreedom {
            get {
                return this.degreesOfFreedomField;
            }
            set {
                this.degreesOfFreedomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastCondition {
            get {
                return this.forecastConditionField;
            }
            set {
                this.forecastConditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastType {
            get {
                return this.forecastTypeField;
            }
            set {
                this.forecastTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecaster {
            get {
                return this.forecasterField;
            }
            set {
                this.forecasterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal functionArgument {
            get {
                return this.functionArgumentField;
            }
            set {
                this.functionArgumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool functionArgumentSpecified {
            get {
                return this.functionArgumentFieldSpecified;
            }
            set {
                this.functionArgumentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string functionCd {
            get {
                return this.functionCdField;
            }
            set {
                this.functionCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string helperDataSource {
            get {
                return this.helperDataSourceField;
            }
            set {
                this.helperDataSourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string helperElementCd {
            get {
                return this.helperElementCdField;
            }
            set {
                this.helperElementCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int helperEndDay {
            get {
                return this.helperEndDayField;
            }
            set {
                this.helperEndDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int helperEndMonth {
            get {
                return this.helperEndMonthField;
            }
            set {
                this.helperEndMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string helperEndYearFlag {
            get {
                return this.helperEndYearFlagField;
            }
            set {
                this.helperEndYearFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int helperMixedPastEndDay {
            get {
                return this.helperMixedPastEndDayField;
            }
            set {
                this.helperMixedPastEndDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int helperMixedPastEndMonth {
            get {
                return this.helperMixedPastEndMonthField;
            }
            set {
                this.helperMixedPastEndMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string helperMixedPastEndYearFlag {
            get {
                return this.helperMixedPastEndYearFlagField;
            }
            set {
                this.helperMixedPastEndYearFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int helperMixedPastStartDay {
            get {
                return this.helperMixedPastStartDayField;
            }
            set {
                this.helperMixedPastStartDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int helperMixedPastStartMonth {
            get {
                return this.helperMixedPastStartMonthField;
            }
            set {
                this.helperMixedPastStartMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string helperMixedPastStartYearFlag {
            get {
                return this.helperMixedPastStartYearFlagField;
            }
            set {
                this.helperMixedPastStartYearFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool helperPredictorUsed {
            get {
                return this.helperPredictorUsedField;
            }
            set {
                this.helperPredictorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int helperStartDay {
            get {
                return this.helperStartDayField;
            }
            set {
                this.helperStartDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int helperStartMonth {
            get {
                return this.helperStartMonthField;
            }
            set {
                this.helperStartMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string helperStartYearFlag {
            get {
                return this.helperStartYearFlagField;
            }
            set {
                this.helperStartYearFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string helperStationTriplet {
            get {
                return this.helperStationTripletField;
            }
            set {
                this.helperStationTripletField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool helperUsedInOverlappingYears {
            get {
                return this.helperUsedInOverlappingYearsField;
            }
            set {
                this.helperUsedInOverlappingYearsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool helperVarianceMatchedToObserved {
            get {
                return this.helperVarianceMatchedToObservedField;
            }
            set {
                this.helperVarianceMatchedToObservedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool jackKnifingUsed {
            get {
                return this.jackKnifingUsedField;
            }
            set {
                this.jackKnifingUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal minimumR2ForPredictor {
            get {
                return this.minimumR2ForPredictorField;
            }
            set {
                this.minimumR2ForPredictorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minimumR2ForPredictorSpecified {
            get {
                return this.minimumR2ForPredictorFieldSpecified;
            }
            set {
                this.minimumR2ForPredictorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int minimumYearsForPredictor {
            get {
                return this.minimumYearsForPredictorField;
            }
            set {
                this.minimumYearsForPredictorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mixedPastEndDay {
            get {
                return this.mixedPastEndDayField;
            }
            set {
                this.mixedPastEndDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mixedPastEndMonth {
            get {
                return this.mixedPastEndMonthField;
            }
            set {
                this.mixedPastEndMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mixedPastEndYearFlag {
            get {
                return this.mixedPastEndYearFlagField;
            }
            set {
                this.mixedPastEndYearFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mixedPastStartDay {
            get {
                return this.mixedPastStartDayField;
            }
            set {
                this.mixedPastStartDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mixedPastStartMonth {
            get {
                return this.mixedPastStartMonthField;
            }
            set {
                this.mixedPastStartMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mixedPastStartYearFlag {
            get {
                return this.mixedPastStartYearFlagField;
            }
            set {
                this.mixedPastStartYearFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mixedPastUsed {
            get {
                return this.mixedPastUsedField;
            }
            set {
                this.mixedPastUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numYearsUsed {
            get {
                return this.numYearsUsedField;
            }
            set {
                this.numYearsUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool optimalWeightingUsed {
            get {
                return this.optimalWeightingUsedField;
            }
            set {
                this.optimalWeightingUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal overrideAverage {
            get {
                return this.overrideAverageField;
            }
            set {
                this.overrideAverageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool overrideAverageSpecified {
            get {
                return this.overrideAverageFieldSpecified;
            }
            set {
                this.overrideAverageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal overrideStderr {
            get {
                return this.overrideStderrField;
            }
            set {
                this.overrideStderrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool overrideStderrSpecified {
            get {
                return this.overrideStderrFieldSpecified;
            }
            set {
                this.overrideStderrFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal pastFlowRealtime {
            get {
                return this.pastFlowRealtimeField;
            }
            set {
                this.pastFlowRealtimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pastFlowRealtimeSpecified {
            get {
                return this.pastFlowRealtimeFieldSpecified;
            }
            set {
                this.pastFlowRealtimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("predictorGroups", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public predictorGroup[] predictorGroups {
            get {
                return this.predictorGroupsField;
            }
            set {
                this.predictorGroupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("predictors", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public predictor[] predictors {
            get {
                return this.predictorsField;
            }
            set {
                this.predictorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal preprocessingConstant {
            get {
                return this.preprocessingConstantField;
            }
            set {
                this.preprocessingConstantField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool preprocessingConstantSpecified {
            get {
                return this.preprocessingConstantFieldSpecified;
            }
            set {
                this.preprocessingConstantFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal preprocessingMultiplier {
            get {
                return this.preprocessingMultiplierField;
            }
            set {
                this.preprocessingMultiplierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool preprocessingMultiplierSpecified {
            get {
                return this.preprocessingMultiplierFieldSpecified;
            }
            set {
                this.preprocessingMultiplierFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string publicationCd {
            get {
                return this.publicationCdField;
            }
            set {
                this.publicationCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal TTestLimit {
            get {
                return this.tTestLimitField;
            }
            set {
                this.tTestLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TTestLimitSpecified {
            get {
                return this.tTestLimitFieldSpecified;
            }
            set {
                this.tTestLimitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetDataSource {
            get {
                return this.targetDataSourceField;
            }
            set {
                this.targetDataSourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetElementCd {
            get {
                return this.targetElementCdField;
            }
            set {
                this.targetElementCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int targetEndDay {
            get {
                return this.targetEndDayField;
            }
            set {
                this.targetEndDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int targetEndMonth {
            get {
                return this.targetEndMonthField;
            }
            set {
                this.targetEndMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetEndYearFlag {
            get {
                return this.targetEndYearFlagField;
            }
            set {
                this.targetEndYearFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int targetStartDay {
            get {
                return this.targetStartDayField;
            }
            set {
                this.targetStartDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int targetStartMonth {
            get {
                return this.targetStartMonthField;
            }
            set {
                this.targetStartMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetStartYearFlag {
            get {
                return this.targetStartYearFlagField;
            }
            set {
                this.targetStartYearFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetStationName {
            get {
                return this.targetStationNameField;
            }
            set {
                this.targetStationNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetStationTriplet {
            get {
                return this.targetStationTripletField;
            }
            set {
                this.targetStationTripletField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool transformErrorsOnly {
            get {
                return this.transformErrorsOnlyField;
            }
            set {
                this.transformErrorsOnlyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class predictorGroup {
        
        private string customStationListNameField;
        
        private string dataSourceCdField;
        
        private string elementCdField;
        
        private bool globalMonthChangeAllowedField;
        
        private string groupNameField;
        
        private int groupNumberField;
        
        private bool groupNumberFieldSpecified;
        
        private bool negativeWeightAllowedField;
        
        private string networksField;
        
        private string statesField;
        
        private bool upstreamForecastField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string customStationListName {
            get {
                return this.customStationListNameField;
            }
            set {
                this.customStationListNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dataSourceCd {
            get {
                return this.dataSourceCdField;
            }
            set {
                this.dataSourceCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string elementCd {
            get {
                return this.elementCdField;
            }
            set {
                this.elementCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool globalMonthChangeAllowed {
            get {
                return this.globalMonthChangeAllowedField;
            }
            set {
                this.globalMonthChangeAllowedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int groupNumber {
            get {
                return this.groupNumberField;
            }
            set {
                this.groupNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool groupNumberSpecified {
            get {
                return this.groupNumberFieldSpecified;
            }
            set {
                this.groupNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool negativeWeightAllowed {
            get {
                return this.negativeWeightAllowedField;
            }
            set {
                this.negativeWeightAllowedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string networks {
            get {
                return this.networksField;
            }
            set {
                this.networksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string states {
            get {
                return this.statesField;
            }
            set {
                this.statesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool upstreamForecast {
            get {
                return this.upstreamForecastField;
            }
            set {
                this.upstreamForecastField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class predictor {
        
        private int endDayField;
        
        private int endMonthField;
        
        private string endYearFlagField;
        
        private int groupNumberField;
        
        private int predictorNumberField;
        
        private bool predictorUsedField;
        
        private int startDayField;
        
        private int startMonthField;
        
        private string startYearFlagField;
        
        private string stationTripletField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int endDay {
            get {
                return this.endDayField;
            }
            set {
                this.endDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int endMonth {
            get {
                return this.endMonthField;
            }
            set {
                this.endMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endYearFlag {
            get {
                return this.endYearFlagField;
            }
            set {
                this.endYearFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int groupNumber {
            get {
                return this.groupNumberField;
            }
            set {
                this.groupNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int predictorNumber {
            get {
                return this.predictorNumberField;
            }
            set {
                this.predictorNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool predictorUsed {
            get {
                return this.predictorUsedField;
            }
            set {
                this.predictorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int startDay {
            get {
                return this.startDayField;
            }
            set {
                this.startDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int startMonth {
            get {
                return this.startMonthField;
            }
            set {
                this.startMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startYearFlag {
            get {
                return this.startYearFlagField;
            }
            set {
                this.startYearFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet {
            get {
                return this.stationTripletField;
            }
            set {
                this.stationTripletField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class forecastEquation {
        
        private string commentField;
        
        private string dataSourceField;
        
        private string elementCdField;
        
        private forecastEquationTerm[] equationTermsField;
        
        private string footnotesField;
        
        private string forecastConditionField;
        
        private string forecastPeriodField;
        
        private string forecastTypeField;
        
        private string functionField;
        
        private decimal functionArgumentField;
        
        private bool functionArgumentFieldSpecified;
        
        private decimal interceptConstantField;
        
        private bool interceptConstantFieldSpecified;
        
        private int keyField;
        
        private decimal maxOfRecordField;
        
        private bool maxOfRecordFieldSpecified;
        
        private decimal minOfRecordField;
        
        private bool minOfRecordFieldSpecified;
        
        private System.Nullable<decimal>[] monthlyCorrelationCoefficientsField;
        
        private System.Nullable<decimal>[] monthlyStderrValuesField;
        
        private string nameField;
        
        private monthAndDay[] publicationMonthsAndDaysField;
        
        private bool publishedField;
        
        private string stationTripletField;
        
        private bool transformErrorsOnlyField;
        
        private string unitCdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dataSource {
            get {
                return this.dataSourceField;
            }
            set {
                this.dataSourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string elementCd {
            get {
                return this.elementCdField;
            }
            set {
                this.elementCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("equationTerms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public forecastEquationTerm[] equationTerms {
            get {
                return this.equationTermsField;
            }
            set {
                this.equationTermsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string footnotes {
            get {
                return this.footnotesField;
            }
            set {
                this.footnotesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastCondition {
            get {
                return this.forecastConditionField;
            }
            set {
                this.forecastConditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastPeriod {
            get {
                return this.forecastPeriodField;
            }
            set {
                this.forecastPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastType {
            get {
                return this.forecastTypeField;
            }
            set {
                this.forecastTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string function {
            get {
                return this.functionField;
            }
            set {
                this.functionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal functionArgument {
            get {
                return this.functionArgumentField;
            }
            set {
                this.functionArgumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool functionArgumentSpecified {
            get {
                return this.functionArgumentFieldSpecified;
            }
            set {
                this.functionArgumentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal interceptConstant {
            get {
                return this.interceptConstantField;
            }
            set {
                this.interceptConstantField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool interceptConstantSpecified {
            get {
                return this.interceptConstantFieldSpecified;
            }
            set {
                this.interceptConstantFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal maxOfRecord {
            get {
                return this.maxOfRecordField;
            }
            set {
                this.maxOfRecordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxOfRecordSpecified {
            get {
                return this.maxOfRecordFieldSpecified;
            }
            set {
                this.maxOfRecordFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal minOfRecord {
            get {
                return this.minOfRecordField;
            }
            set {
                this.minOfRecordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minOfRecordSpecified {
            get {
                return this.minOfRecordFieldSpecified;
            }
            set {
                this.minOfRecordFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("monthlyCorrelationCoefficients", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<decimal>[] monthlyCorrelationCoefficients {
            get {
                return this.monthlyCorrelationCoefficientsField;
            }
            set {
                this.monthlyCorrelationCoefficientsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("monthlyStderrValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<decimal>[] monthlyStderrValues {
            get {
                return this.monthlyStderrValuesField;
            }
            set {
                this.monthlyStderrValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("publicationMonthsAndDays", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public monthAndDay[] publicationMonthsAndDays {
            get {
                return this.publicationMonthsAndDaysField;
            }
            set {
                this.publicationMonthsAndDaysField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool published {
            get {
                return this.publishedField;
            }
            set {
                this.publishedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet {
            get {
                return this.stationTripletField;
            }
            set {
                this.stationTripletField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool transformErrorsOnly {
            get {
                return this.transformErrorsOnlyField;
            }
            set {
                this.transformErrorsOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCd {
            get {
                return this.unitCdField;
            }
            set {
                this.unitCdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class forecastEquationTerm {
        
        private decimal coefficientField;
        
        private bool coefficientFieldSpecified;
        
        private string dataPeriodDaysField;
        
        private string dataPeriodMonthField;
        
        private string dataYearFlagField;
        
        private stationElement stationElementField;
        
        private string unitCdField;
        
        private bool upstreamForecastField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal coefficient {
            get {
                return this.coefficientField;
            }
            set {
                this.coefficientField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool coefficientSpecified {
            get {
                return this.coefficientFieldSpecified;
            }
            set {
                this.coefficientFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dataPeriodDays {
            get {
                return this.dataPeriodDaysField;
            }
            set {
                this.dataPeriodDaysField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dataPeriodMonth {
            get {
                return this.dataPeriodMonthField;
            }
            set {
                this.dataPeriodMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dataYearFlag {
            get {
                return this.dataYearFlagField;
            }
            set {
                this.dataYearFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stationElement stationElement {
            get {
                return this.stationElementField;
            }
            set {
                this.stationElementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCd {
            get {
                return this.unitCdField;
            }
            set {
                this.unitCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool upstreamForecast {
            get {
                return this.upstreamForecastField;
            }
            set {
                this.upstreamForecastField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class stationElement {
        
        private string beginDateField;
        
        private int dataPrecisionField;
        
        private bool dataPrecisionFieldSpecified;
        
        private duration durationField;
        
        private bool durationFieldSpecified;
        
        private string elementCdField;
        
        private string endDateField;
        
        private heightDepth heightDepthField;
        
        private int ordinalField;
        
        private string originalUnitCdField;
        
        private string stationTripletField;
        
        private string storedUnitCdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string beginDate {
            get {
                return this.beginDateField;
            }
            set {
                this.beginDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int dataPrecision {
            get {
                return this.dataPrecisionField;
            }
            set {
                this.dataPrecisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dataPrecisionSpecified {
            get {
                return this.dataPrecisionFieldSpecified;
            }
            set {
                this.dataPrecisionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public duration duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool durationSpecified {
            get {
                return this.durationFieldSpecified;
            }
            set {
                this.durationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string elementCd {
            get {
                return this.elementCdField;
            }
            set {
                this.elementCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public heightDepth heightDepth {
            get {
                return this.heightDepthField;
            }
            set {
                this.heightDepthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int ordinal {
            get {
                return this.ordinalField;
            }
            set {
                this.ordinalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string originalUnitCd {
            get {
                return this.originalUnitCdField;
            }
            set {
                this.originalUnitCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet {
            get {
                return this.stationTripletField;
            }
            set {
                this.stationTripletField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storedUnitCd {
            get {
                return this.storedUnitCdField;
            }
            set {
                this.storedUnitCdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public enum duration {
        
        /// <remarks/>
        DAILY,
        
        /// <remarks/>
        MONTHLY,
        
        /// <remarks/>
        SEMIMONTHLY,
        
        /// <remarks/>
        WATER_YEAR,
        
        /// <remarks/>
        CALENDAR_YEAR,
        
        /// <remarks/>
        HOURLY,
        
        /// <remarks/>
        SEASONAL,
        
        /// <remarks/>
        ANNUAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class heightDepth {
        
        private string unitCdField;
        
        private decimal valueField;
        
        private bool valueFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCd {
            get {
                return this.unitCdField;
            }
            set {
                this.unitCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class monthAndDay {
        
        private int dayField;
        
        private int monthField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class data {
        
        private string beginDateField;
        
        private string[] collectionDatesField;
        
        private duration durationField;
        
        private bool durationFieldSpecified;
        
        private string endDateField;
        
        private string[] flagsField;
        
        private string stationTripletField;
        
        private System.Nullable<decimal>[] valuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string beginDate {
            get {
                return this.beginDateField;
            }
            set {
                this.beginDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("collectionDates", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] collectionDates {
            get {
                return this.collectionDatesField;
            }
            set {
                this.collectionDatesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public duration duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool durationSpecified {
            get {
                return this.durationFieldSpecified;
            }
            set {
                this.durationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("flags", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet {
            get {
                return this.stationTripletField;
            }
            set {
                this.stationTripletField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("values", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<decimal>[] values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class instantaneousDataValue {
        
        private string flagField;
        
        private string timeField;
        
        private decimal valueField;
        
        private bool valueFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string flag {
            get {
                return this.flagField;
            }
            set {
                this.flagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class instantaneousData {
        
        private string beginDateField;
        
        private string endDateField;
        
        private int stationIdField;
        
        private string unitCdField;
        
        private instantaneousDataValue[] valuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string beginDate {
            get {
                return this.beginDateField;
            }
            set {
                this.beginDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int stationId {
            get {
                return this.stationIdField;
            }
            set {
                this.stationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCd {
            get {
                return this.unitCdField;
            }
            set {
                this.unitCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("values", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public instantaneousDataValue[] values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class forecastPeriod {
        
        private string descriptionField;
        
        private string forecastPeriod1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("forecastPeriod", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastPeriod1 {
            get {
                return this.forecastPeriod1Field;
            }
            set {
                this.forecastPeriod1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class insertedOrUpdatedDataContent {
        
        private string collectionDateField;
        
        private string flagField;
        
        private string timestampField;
        
        private decimal valueField;
        
        private bool valueFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string collectionDate {
            get {
                return this.collectionDateField;
            }
            set {
                this.collectionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string flag {
            get {
                return this.flagField;
            }
            set {
                this.flagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class insertedOrUpdatedData {
        
        private string beginDateField;
        
        private insertedOrUpdatedDataContent[] dataContentListField;
        
        private duration durationField;
        
        private bool durationFieldSpecified;
        
        private string elementCdField;
        
        private string endDateField;
        
        private string stationTripletField;
        
        private int timezoneOffsetField;
        
        private string unitCdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string beginDate {
            get {
                return this.beginDateField;
            }
            set {
                this.beginDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dataContentList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public insertedOrUpdatedDataContent[] dataContentList {
            get {
                return this.dataContentListField;
            }
            set {
                this.dataContentListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public duration duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool durationSpecified {
            get {
                return this.durationFieldSpecified;
            }
            set {
                this.durationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string elementCd {
            get {
                return this.elementCdField;
            }
            set {
                this.elementCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet {
            get {
                return this.stationTripletField;
            }
            set {
                this.stationTripletField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int timezoneOffset {
            get {
                return this.timezoneOffsetField;
            }
            set {
                this.timezoneOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCd {
            get {
                return this.unitCdField;
            }
            set {
                this.unitCdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class diagnosticStackTraceElement {
        
        private string classNameField;
        
        private string fileNameField;
        
        private int lineNumberField;
        
        private string methodNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string className {
            get {
                return this.classNameField;
            }
            set {
                this.classNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int lineNumber {
            get {
                return this.lineNumberField;
            }
            set {
                this.lineNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string methodName {
            get {
                return this.methodNameField;
            }
            set {
                this.methodNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class diagnosticException {
        
        private diagnosticException causeField;
        
        private string exceptionClassField;
        
        private string messageField;
        
        private diagnosticStackTraceElement[] strackTraceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public diagnosticException cause {
            get {
                return this.causeField;
            }
            set {
                this.causeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string exceptionClass {
            get {
                return this.exceptionClassField;
            }
            set {
                this.exceptionClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("strackTrace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public diagnosticStackTraceElement[] strackTrace {
            get {
                return this.strackTraceField;
            }
            set {
                this.strackTraceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class diagnosticTestResult {
        
        private string applicationBuildDateField;
        
        private string applicationVersionField;
        
        private string errorMessageField;
        
        private diagnosticException exceptionField;
        
        private bool hasSucceededField;
        
        private string testDescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string applicationBuildDate {
            get {
                return this.applicationBuildDateField;
            }
            set {
                this.applicationBuildDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string applicationVersion {
            get {
                return this.applicationVersionField;
            }
            set {
                this.applicationVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public diagnosticException exception {
            get {
                return this.exceptionField;
            }
            set {
                this.exceptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hasSucceeded {
            get {
                return this.hasSucceededField;
            }
            set {
                this.hasSucceededField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string testDescription {
            get {
                return this.testDescriptionField;
            }
            set {
                this.testDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class diagnostics {
        
        private bool hasSucceededField;
        
        private diagnosticTestResult[] testResultsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hasSucceeded {
            get {
                return this.hasSucceededField;
            }
            set {
                this.hasSucceededField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("testResults", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public diagnosticTestResult[] testResults {
            get {
                return this.testResultsField;
            }
            set {
                this.testResultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class peakData {
        
        private int beginYearField;
        
        private duration durationField;
        
        private bool durationFieldSpecified;
        
        private int endYearField;
        
        private string[] flagsField;
        
        private System.Nullable<int>[] peakDaysField;
        
        private System.Nullable<int>[] peakMonthsField;
        
        private System.Nullable<decimal>[] valuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int beginYear {
            get {
                return this.beginYearField;
            }
            set {
                this.beginYearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public duration duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool durationSpecified {
            get {
                return this.durationFieldSpecified;
            }
            set {
                this.durationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int endYear {
            get {
                return this.endYearField;
            }
            set {
                this.endYearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("flags", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("peakDays", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] peakDays {
            get {
                return this.peakDaysField;
            }
            set {
                this.peakDaysField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("peakMonths", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] peakMonths {
            get {
                return this.peakMonthsField;
            }
            set {
                this.peakMonthsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("values", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<decimal>[] values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class stationMetaData {
        
        private string actonIdField;
        
        private string beginDateField;
        
        private string countyNameField;
        
        private decimal elevationField;
        
        private bool elevationFieldSpecified;
        
        private string endDateField;
        
        private string fipsCountryCdField;
        
        private string fipsCountyCdField;
        
        private string fipsStateNumberField;
        
        private string hucField;
        
        private string hudField;
        
        private decimal latitudeField;
        
        private bool latitudeFieldSpecified;
        
        private decimal longitudeField;
        
        private bool longitudeFieldSpecified;
        
        private string nameField;
        
        private string shefIdField;
        
        private decimal stationDataTimeZoneField;
        
        private bool stationDataTimeZoneFieldSpecified;
        
        private decimal stationTimeZoneField;
        
        private bool stationTimeZoneFieldSpecified;
        
        private string stationTripletField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string actonId {
            get {
                return this.actonIdField;
            }
            set {
                this.actonIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string beginDate {
            get {
                return this.beginDateField;
            }
            set {
                this.beginDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string countyName {
            get {
                return this.countyNameField;
            }
            set {
                this.countyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal elevation {
            get {
                return this.elevationField;
            }
            set {
                this.elevationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool elevationSpecified {
            get {
                return this.elevationFieldSpecified;
            }
            set {
                this.elevationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fipsCountryCd {
            get {
                return this.fipsCountryCdField;
            }
            set {
                this.fipsCountryCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fipsCountyCd {
            get {
                return this.fipsCountyCdField;
            }
            set {
                this.fipsCountyCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fipsStateNumber {
            get {
                return this.fipsStateNumberField;
            }
            set {
                this.fipsStateNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string huc {
            get {
                return this.hucField;
            }
            set {
                this.hucField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hud {
            get {
                return this.hudField;
            }
            set {
                this.hudField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool latitudeSpecified {
            get {
                return this.latitudeFieldSpecified;
            }
            set {
                this.latitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool longitudeSpecified {
            get {
                return this.longitudeFieldSpecified;
            }
            set {
                this.longitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string shefId {
            get {
                return this.shefIdField;
            }
            set {
                this.shefIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal stationDataTimeZone {
            get {
                return this.stationDataTimeZoneField;
            }
            set {
                this.stationDataTimeZoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stationDataTimeZoneSpecified {
            get {
                return this.stationDataTimeZoneFieldSpecified;
            }
            set {
                this.stationDataTimeZoneFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal stationTimeZone {
            get {
                return this.stationTimeZoneField;
            }
            set {
                this.stationTimeZoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stationTimeZoneSpecified {
            get {
                return this.stationTimeZoneFieldSpecified;
            }
            set {
                this.stationTimeZoneFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet {
            get {
                return this.stationTripletField;
            }
            set {
                this.stationTripletField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(centralTendencyData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class averagesData {
        
        private int beginDayField;
        
        private int beginMonthField;
        
        private int dataSetNumberObservationsField;
        
        private bool dataSetNumberObservationsFieldSpecified;
        
        private duration durationField;
        
        private bool durationFieldSpecified;
        
        private int endDayField;
        
        private int endMonthField;
        
        private System.Nullable<int>[] numberObservationsField;
        
        private System.Nullable<decimal>[] valuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int beginDay {
            get {
                return this.beginDayField;
            }
            set {
                this.beginDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int beginMonth {
            get {
                return this.beginMonthField;
            }
            set {
                this.beginMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int dataSetNumberObservations {
            get {
                return this.dataSetNumberObservationsField;
            }
            set {
                this.dataSetNumberObservationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dataSetNumberObservationsSpecified {
            get {
                return this.dataSetNumberObservationsFieldSpecified;
            }
            set {
                this.dataSetNumberObservationsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public duration duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool durationSpecified {
            get {
                return this.durationFieldSpecified;
            }
            set {
                this.durationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int endDay {
            get {
                return this.endDayField;
            }
            set {
                this.endDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int endMonth {
            get {
                return this.endMonthField;
            }
            set {
                this.endMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("numberObservations", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] numberObservations {
            get {
                return this.numberObservationsField;
            }
            set {
                this.numberObservationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("values", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<decimal>[] values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class centralTendencyData : averagesData {
        
        private centralTendencyType centralTendencyTypeField;
        
        private bool centralTendencyTypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public centralTendencyType centralTendencyType {
            get {
                return this.centralTendencyTypeField;
            }
            set {
                this.centralTendencyTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool centralTendencyTypeSpecified {
            get {
                return this.centralTendencyTypeFieldSpecified;
            }
            set {
                this.centralTendencyTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public enum centralTendencyType {
        
        /// <remarks/>
        MEDIAN,
        
        /// <remarks/>
        AVERAGE,
        
        /// <remarks/>
        NORMAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class SeasonalSwePeakData {
        
        private int dayField;
        
        private bool dayFieldSpecified;
        
        private int monthField;
        
        private bool monthFieldSpecified;
        
        private int numberObservationsField;
        
        private bool numberObservationsFieldSpecified;
        
        private decimal valueField;
        
        private bool valueFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool daySpecified {
            get {
                return this.dayFieldSpecified;
            }
            set {
                this.dayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool monthSpecified {
            get {
                return this.monthFieldSpecified;
            }
            set {
                this.monthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberObservations {
            get {
                return this.numberObservationsField;
            }
            set {
                this.numberObservationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberObservationsSpecified {
            get {
                return this.numberObservationsFieldSpecified;
            }
            set {
                this.numberObservationsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class SeasonalSweOnsetData {
        
        private int dayField;
        
        private bool dayFieldSpecified;
        
        private int monthField;
        
        private bool monthFieldSpecified;
        
        private int numberObservationsField;
        
        private bool numberObservationsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool daySpecified {
            get {
                return this.dayFieldSpecified;
            }
            set {
                this.dayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool monthSpecified {
            get {
                return this.monthFieldSpecified;
            }
            set {
                this.monthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberObservations {
            get {
                return this.numberObservationsField;
            }
            set {
                this.numberObservationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberObservationsSpecified {
            get {
                return this.numberObservationsFieldSpecified;
            }
            set {
                this.numberObservationsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class SeasonalSweMeltOutData {
        
        private int dayField;
        
        private bool dayFieldSpecified;
        
        private int monthField;
        
        private bool monthFieldSpecified;
        
        private int numberObservationsField;
        
        private bool numberObservationsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool daySpecified {
            get {
                return this.dayFieldSpecified;
            }
            set {
                this.dayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool monthSpecified {
            get {
                return this.monthFieldSpecified;
            }
            set {
                this.monthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberObservations {
            get {
                return this.numberObservationsField;
            }
            set {
                this.numberObservationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberObservationsSpecified {
            get {
                return this.numberObservationsFieldSpecified;
            }
            set {
                this.numberObservationsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class CentralTendencySWEStatisticsData {
        
        private centralTendencyType centralTendencyTypeField;
        
        private bool centralTendencyTypeFieldSpecified;
        
        private SeasonalSweMeltOutData seasonalSweMeltOutDataField;
        
        private SeasonalSweOnsetData seasonalSweOnsetDataField;
        
        private SeasonalSwePeakData seasonalSwePeakDataField;
        
        private string stationTripletField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public centralTendencyType centralTendencyType {
            get {
                return this.centralTendencyTypeField;
            }
            set {
                this.centralTendencyTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool centralTendencyTypeSpecified {
            get {
                return this.centralTendencyTypeFieldSpecified;
            }
            set {
                this.centralTendencyTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SeasonalSweMeltOutData seasonalSweMeltOutData {
            get {
                return this.seasonalSweMeltOutDataField;
            }
            set {
                this.seasonalSweMeltOutDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SeasonalSweOnsetData seasonalSweOnsetData {
            get {
                return this.seasonalSweOnsetDataField;
            }
            set {
                this.seasonalSweOnsetDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SeasonalSwePeakData seasonalSwePeakData {
            get {
                return this.seasonalSwePeakDataField;
            }
            set {
                this.seasonalSwePeakDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet {
            get {
                return this.stationTripletField;
            }
            set {
                this.stationTripletField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class unit {
        
        private string nameField;
        
        private string unitCdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCd {
            get {
                return this.unitCdField;
            }
            set {
                this.unitCdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(forecastPeriodCentralTendency))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class forecastPeriodAverage {
        
        private string forecastPeriodField;
        
        private int numberObservationsField;
        
        private bool numberObservationsFieldSpecified;
        
        private string stationTripletField;
        
        private decimal valueField;
        
        private bool valueFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastPeriod {
            get {
                return this.forecastPeriodField;
            }
            set {
                this.forecastPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberObservations {
            get {
                return this.numberObservationsField;
            }
            set {
                this.numberObservationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberObservationsSpecified {
            get {
                return this.numberObservationsFieldSpecified;
            }
            set {
                this.numberObservationsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet {
            get {
                return this.stationTripletField;
            }
            set {
                this.stationTripletField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class forecastPeriodCentralTendency : forecastPeriodAverage {
        
        private centralTendencyType centralTendencyTypeField;
        
        private bool centralTendencyTypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public centralTendencyType centralTendencyType {
            get {
                return this.centralTendencyTypeField;
            }
            set {
                this.centralTendencyTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool centralTendencyTypeSpecified {
            get {
                return this.centralTendencyTypeFieldSpecified;
            }
            set {
                this.centralTendencyTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(centralTendencyPeakData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class averagesPeakData {
        
        private duration durationField;
        
        private bool durationFieldSpecified;
        
        private int numberObservationsField;
        
        private bool numberObservationsFieldSpecified;
        
        private int peakDayField;
        
        private int peakMonthField;
        
        private decimal valueField;
        
        private bool valueFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public duration duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool durationSpecified {
            get {
                return this.durationFieldSpecified;
            }
            set {
                this.durationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberObservations {
            get {
                return this.numberObservationsField;
            }
            set {
                this.numberObservationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberObservationsSpecified {
            get {
                return this.numberObservationsFieldSpecified;
            }
            set {
                this.numberObservationsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int peakDay {
            get {
                return this.peakDayField;
            }
            set {
                this.peakDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int peakMonth {
            get {
                return this.peakMonthField;
            }
            set {
                this.peakMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class centralTendencyPeakData : averagesPeakData {
        
        private centralTendencyType centralTendencyTypeField;
        
        private bool centralTendencyTypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public centralTendencyType centralTendencyType {
            get {
                return this.centralTendencyTypeField;
            }
            set {
                this.centralTendencyTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool centralTendencyTypeSpecified {
            get {
                return this.centralTendencyTypeFieldSpecified;
            }
            set {
                this.centralTendencyTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class forecastPoint {
        
        private System.Nullable<int>[] exceedenceProbabilitiesField;
        
        private string nameField;
        
        private string responsibleForecasterField;
        
        private string stationTripletField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("exceedenceProbabilities", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] exceedenceProbabilities {
            get {
                return this.exceedenceProbabilitiesField;
            }
            set {
                this.exceedenceProbabilitiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string responsibleForecaster {
            get {
                return this.responsibleForecasterField;
            }
            set {
                this.responsibleForecasterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet {
            get {
                return this.stationTripletField;
            }
            set {
                this.stationTripletField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class reservoirMetadata {
        
        private decimal elevationAtCapacityField;
        
        private bool elevationAtCapacityFieldSpecified;
        
        private decimal reservoirCapacityField;
        
        private bool reservoirCapacityFieldSpecified;
        
        private string stationTripletField;
        
        private decimal usableCapacityField;
        
        private bool usableCapacityFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal elevationAtCapacity {
            get {
                return this.elevationAtCapacityField;
            }
            set {
                this.elevationAtCapacityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool elevationAtCapacitySpecified {
            get {
                return this.elevationAtCapacityFieldSpecified;
            }
            set {
                this.elevationAtCapacityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal reservoirCapacity {
            get {
                return this.reservoirCapacityField;
            }
            set {
                this.reservoirCapacityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reservoirCapacitySpecified {
            get {
                return this.reservoirCapacityFieldSpecified;
            }
            set {
                this.reservoirCapacityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet {
            get {
                return this.stationTripletField;
            }
            set {
                this.stationTripletField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal usableCapacity {
            get {
                return this.usableCapacityField;
            }
            set {
                this.usableCapacityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool usableCapacitySpecified {
            get {
                return this.usableCapacityFieldSpecified;
            }
            set {
                this.usableCapacityFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class hourlyDataValue {
        
        private string dateTimeField;
        
        private string flagField;
        
        private decimal valueField;
        
        private bool valueFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string flag {
            get {
                return this.flagField;
            }
            set {
                this.flagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class hourlyData {
        
        private string beginDateField;
        
        private string endDateField;
        
        private string stationTripletField;
        
        private hourlyDataValue[] valuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string beginDate {
            get {
                return this.beginDateField;
            }
            set {
                this.beginDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet {
            get {
                return this.stationTripletField;
            }
            set {
                this.stationTripletField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("values", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public hourlyDataValue[] values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class forecast {
        
        private string calculationDateField;
        
        private string elementCdField;
        
        private System.Nullable<int>[] exceedenceProbabilitiesField;
        
        private System.Nullable<decimal>[] exceedenceValuesField;
        
        private string forecastPeriodField;
        
        private decimal periodAverageField;
        
        private bool periodAverageFieldSpecified;
        
        private string publicationDateField;
        
        private string stationTripletField;
        
        private string unitCdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calculationDate {
            get {
                return this.calculationDateField;
            }
            set {
                this.calculationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string elementCd {
            get {
                return this.elementCdField;
            }
            set {
                this.elementCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("exceedenceProbabilities", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] exceedenceProbabilities {
            get {
                return this.exceedenceProbabilitiesField;
            }
            set {
                this.exceedenceProbabilitiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("exceedenceValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<decimal>[] exceedenceValues {
            get {
                return this.exceedenceValuesField;
            }
            set {
                this.exceedenceValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastPeriod {
            get {
                return this.forecastPeriodField;
            }
            set {
                this.forecastPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal periodAverage {
            get {
                return this.periodAverageField;
            }
            set {
                this.periodAverageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool periodAverageSpecified {
            get {
                return this.periodAverageFieldSpecified;
            }
            set {
                this.periodAverageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string publicationDate {
            get {
                return this.publicationDateField;
            }
            set {
                this.publicationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet {
            get {
                return this.stationTripletField;
            }
            set {
                this.stationTripletField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCd {
            get {
                return this.unitCdField;
            }
            set {
                this.unitCdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public enum instantaneousDataFilter {
        
        /// <remarks/>
        ALL,
        
        /// <remarks/>
        FIRST_OF_DAY,
        
        /// <remarks/>
        MIDNIGHT_ONLY,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public enum unitSystem {
        
        /// <remarks/>
        ENGLISH,
        
        /// <remarks/>
        LAST_COLLECTED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getElementsCompletedEventHandler(object sender, getElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public element[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((element[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getElementCompletedEventHandler(object sender, getElementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getElementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getElementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public element Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((element)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getForecastEquationsCompletedEventHandler(object sender, getForecastEquationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForecastEquationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForecastEquationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public forecastEquation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((forecastEquation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getForecastsCompletedEventHandler(object sender, getForecastsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForecastsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForecastsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public forecast[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((forecast[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getHourlyDataCompletedEventHandler(object sender, getHourlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHourlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHourlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public hourlyData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((hourlyData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getReservoirMetadataCompletedEventHandler(object sender, getReservoirMetadataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReservoirMetadataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReservoirMetadataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public reservoirMetadata Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((reservoirMetadata)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getForecastPointCompletedEventHandler(object sender, getForecastPointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForecastPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForecastPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public forecastPoint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((forecastPoint)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getCentralTendencyPeakDataCompletedEventHandler(object sender, getCentralTendencyPeakDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCentralTendencyPeakDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCentralTendencyPeakDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public centralTendencyPeakData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((centralTendencyPeakData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getForecastPeriodCentralTendencyCompletedEventHandler(object sender, getForecastPeriodCentralTendencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForecastPeriodCentralTendencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForecastPeriodCentralTendencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public forecastPeriodCentralTendency[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((forecastPeriodCentralTendency[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getForecastValueCompletedEventHandler(object sender, getForecastValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForecastValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForecastValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getUnitsCompletedEventHandler(object sender, getUnitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUnitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUnitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public unit[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((unit[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getCentralTendencySWETimingCompletedEventHandler(object sender, getCentralTendencySWETimingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCentralTendencySWETimingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCentralTendencySWETimingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CentralTendencySWEStatisticsData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CentralTendencySWEStatisticsData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getCentralTendencyDataCompletedEventHandler(object sender, getCentralTendencyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCentralTendencyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCentralTendencyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public centralTendencyData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((centralTendencyData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getStationMetadataCompletedEventHandler(object sender, getStationMetadataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStationMetadataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStationMetadataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stationMetaData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stationMetaData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getPeakDataCompletedEventHandler(object sender, getPeakDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPeakDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPeakDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public peakData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((peakData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void runDiagnosticsCompletedEventHandler(object sender, runDiagnosticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runDiagnosticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runDiagnosticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public diagnostics Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((diagnostics)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getForecastConfigurationsCompletedEventHandler(object sender, getForecastConfigurationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForecastConfigurationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForecastConfigurationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public configuration[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((configuration[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getForecastPeriodAveragesCompletedEventHandler(object sender, getForecastPeriodAveragesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForecastPeriodAveragesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForecastPeriodAveragesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public forecastPeriodAverage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((forecastPeriodAverage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getStationElementsCompletedEventHandler(object sender, getStationElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStationElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStationElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stationElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stationElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getDataInsertedOrUpdatedSinceCompletedEventHandler(object sender, getDataInsertedOrUpdatedSinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataInsertedOrUpdatedSinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataInsertedOrUpdatedSinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public insertedOrUpdatedData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((insertedOrUpdatedData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getAveragesDataCompletedEventHandler(object sender, getAveragesDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAveragesDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAveragesDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public averagesData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((averagesData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getForecastPeriodsCompletedEventHandler(object sender, getForecastPeriodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForecastPeriodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForecastPeriodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public forecastPeriod[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((forecastPeriod[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getHeightDepthsCompletedEventHandler(object sender, getHeightDepthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHeightDepthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHeightDepthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public heightDepth[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((heightDepth[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void areYouThereCompletedEventHandler(object sender, areYouThereCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class areYouThereCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal areYouThereCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getReservoirMetadataMultipleCompletedEventHandler(object sender, getReservoirMetadataMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReservoirMetadataMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReservoirMetadataMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public reservoirMetadata[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((reservoirMetadata[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getInstantaneousDataCompletedEventHandler(object sender, getInstantaneousDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInstantaneousDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInstantaneousDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public instantaneousData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((instantaneousData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getDataCompletedEventHandler(object sender, getDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public data[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((data[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getForecastCompletedEventHandler(object sender, getForecastCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForecastCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForecastCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public forecast Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((forecast)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getStationsCompletedEventHandler(object sender, getStationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getForecastsByPubDateCompletedEventHandler(object sender, getForecastsByPubDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForecastsByPubDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForecastsByPubDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public forecast[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((forecast[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getUnitNameCompletedEventHandler(object sender, getUnitNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUnitNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUnitNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getAllForecastsForStationCompletedEventHandler(object sender, getAllForecastsForStationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllForecastsForStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllForecastsForStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public forecastFull[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((forecastFull[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getForecastEquationsMultipleCompletedEventHandler(object sender, getForecastEquationsMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForecastEquationsMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForecastEquationsMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public forecastEquation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((forecastEquation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getAveragesPeakCompletedEventHandler(object sender, getAveragesPeakCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAveragesPeakCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAveragesPeakCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public averagesPeakData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((averagesPeakData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getInstantaneousDataInsertedOrUpdatedSinceCompletedEventHandler(object sender, getInstantaneousDataInsertedOrUpdatedSinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInstantaneousDataInsertedOrUpdatedSinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInstantaneousDataInsertedOrUpdatedSinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public instantaneousData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((instantaneousData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getStationDataAssuredFlagsCompletedEventHandler(object sender, getStationDataAssuredFlagsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStationDataAssuredFlagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStationDataAssuredFlagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stationDataAssuredFlags[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stationDataAssuredFlags[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getForecastPointsCompletedEventHandler(object sender, getForecastPointsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForecastPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForecastPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public forecastPoint[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((forecastPoint[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getStationMetadataMultipleCompletedEventHandler(object sender, getStationMetadataMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStationMetadataMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStationMetadataMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stationMetaData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stationMetaData[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591